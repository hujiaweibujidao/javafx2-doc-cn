<!DOCTYPE html>
<html>
 <head> 
  <meta charset="utf-8" /> 
  <title>Area Chart &middot; Using JavaFX Charts &middot; JavaFx 2 中文文档</title> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0" /> 
  <meta name="keywords" content="JavaFx JavaFx2 JavaFx文档 JavaFx2文档 JavaFx2中文文档 JavaFx中文文档" /> 
  <meta name="description" content="JavaFx 2 中文文档" /> 
  <meta name="author" content="" /> 
  <!-- Le styles --> 
  <link href="../../assets/css/bootstrap.css" rel="stylesheet" /> 
  <link href="../../assets/css/bootstrap-responsive.css" rel="stylesheet" /> 
  <link href="../../assets/css/docs.css" rel="stylesheet" /> 
  <link href="../../assets/js/google-code-prettify/prettify.css" rel="stylesheet" /> 
  <link media="screen,projection" href="../../assets/css/ui.totop.css" rel="stylesheet" /> 
  <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements --> 
  <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]--> 
  <!-- Le fav and touch icons --> 
  <link rel="shortcut icon" href="../../assets/ico/favicon.ico" /> 
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="../../assets/ico/apple-touch-icon-144-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="../../assets/ico/apple-touch-icon-114-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="../../assets/ico/apple-touch-icon-72-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" href="../../assets/ico/apple-touch-icon-57-precomposed.png" /> 
  <script src="../../assets/js/ga.js"></script> 
 </head> 
 <body data-spy="scroll" data-target=".subnav" data-offset="50"> 
  <!-- Navbar
    ================================================== --> 
  <div class="navbar navbar-fixed-top"> 
   <div class="navbar-inner"> 
    <div class="container"> 
     <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse"> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> 
     <a class="brand" href="../../index.html">JavaFx 2 中文文档</a> 
     <div class="nav-collapse collapse"> 
      <ul class="nav"> 
       <li class=""><a href="../../index.html"><i class="icon icon-home icon-white"></i> 首页</a></li> 
       <li class="divider-vertical"></li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">入门<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/overview/jfxpub-overview.htm">什么是JavaFx？</a></li> 
         <li><a href="../../2/get_started/jfxpub-get_started.htm">开始使用JavaFx</a></li> 
         <li><a href="../../2/fxml_get_started/jfxpub-fxml_get_started.htm">开始使用FXML</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">用户界面<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/layout/jfxpub-layout.htm">使用布局</a></li> 
         <li><a href="../../2/text/jfxpub-text.htm">添加文本</a></li> 
         <li><a href="../../2/ui_controls/jfxpub-ui_controls.htm">使用用户界面控件</a></li> 
         <li><a href="../../2/events/jfxpub-events.htm">处理事件</a></li> 
         <li><a href="../../2/charts/jfxpub-charts.htm">创建图表</a></li> 
         <li><a href="../../2/webview/jfxpub-webview.htm">添加HTML内容</a></li> 
         <li><a href="../../2/css_tutorial/jfxpub-css_tutorial.htm">使用CSS为应用程序设置皮肤</a></li> 
         <li><a href="../../2/drag_drop/jfxpub-drag_drop.htm">拖放数据</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">效果&middot;动画&middot;媒体<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/visual_effects/jfxpub-visual_effects.htm">创建视觉效果</a></li> 
         <li><a href="../../2/transformations/jfxpub-transformations.htm">添加二维和三维变形</a></li> 
         <li><a href="../../2/animations/jfxpub-animations.htm">添加过渡和动画</a></li> 
         <li><a href="../../2/media/jfxpub-media.htm">嵌入媒体</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">应用程序逻辑<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/architecture/jfxpub-architecture.htm">架构和框架</a></li> 
         <li><a href="../../2/scenegraph/jfxpub-scenegraph.htm">使用场景图</a></li> 
         <li><a href="../../2/binding/jfxpub-binding.htm">使用属性和绑定</a></li> 
         <li><a href="../../2/collections/jfxpub-collections.htm">使用集合</a></li> 
         <li><a href="../../2/threads/jfxpub-threads.htm">并发和线程</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">部署和更多<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/deployment/jfxpub-deployment.htm">打包和部署</a></li> 
         <li><a href="../../2/swing/jfxpub-swing.htm">在Swing中使用JavaFx</a></li> 
         <li><a href="../../2/swt_interoperability/jfxpub-swt_interoperability.htm">与SWT的互操作性</a></li> 
         <li><a href="../../2/doclet/jfxpub-doclet.htm">使用Doclet</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">参考<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="http://docs.oracle.com/javafx/2/api/index.html" target="_blank"><i class="icon-share icon"></i> API文档</a></li> 
         <li><a href="http://docs.oracle.com/javafx/2/api/javafx/scene/doc-files/cssref.html" target="_blank"><i class="icon-share icon"></i> CSS参考指南</a></li> 
         <li><a href="http://docs.oracle.com/javafx/2/api/javafx/fxml/doc-files/introduction_to_fxml.html" target="_blank"><i class="icon-share icon"></i> FXML简介</a></li> 
        </ul> </li> 
       <li class="divider-vertical"></li> 
       <li class=""><a href="../../more.html"><i class="icon icon-plus-sign icon-white"></i> 更多精彩</a></li> 
       <li class=""><a href="../../license.html"><i class="icon icon-book icon-white"></i> 许可说明</a></li> 
       <li class=""><a href="../../about.html"><i class="icon icon-user icon-white"></i> 关于我们</a></li> 
      </ul> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div class="row"> 
   <div id="container" class="container span9 offset1"> 
    <!-- Masthead
================================================== --> 
    <header class="jumbotron subhead" id="overview"> 
     <!-- Insert Header Here! --> 
     <h1>Using JavaFX Charts</h1>
     <p class=" lead">Area Chart</p>
     <ul class=" pager">
      <li class=" previous"><a href="line-chart.htm">←上一篇</a></li>
      <li class=" next"><a href="bubble-chart.htm">下一篇→</a></li>
     </ul>
     <hr />
    </header>
    <div id="ind"> 
     <!-- /////////////// Start content copied from DARB output ////////////// --> 
     <a id="JFXCH102" name="JFXCH102"></a>
     <a id="CIHCFGBA" name="CIHCFGBA"></a>  
     <p>The area chart is a type of a two-axis chart. Similar to line charts, it presents data as a series of points connected by straight lines. However, the area between the axis and the line is painted with color. Each series of data is painted with a different color. <a href="#CIHBIJAC">Figure 4-1</a> shows an area chart with two series of data.</p> 
     <div class="figure">
      <a id="CIHBIJAC" name="CIHBIJAC"></a>
      <a id="JFXCH149" name="JFXCH149"></a> 
      <p class="titleinfigure">Figure 4-1 Typical Area Chart</p> 
      <img src="img/area-sample.png" alt="Description of Figure 4-1 follows" title="Description of Figure 4-1 follows" longdesc="img_text/area-sample.htm" />
      <br /> 
      <br /> 
      <br />
     </div> 
     <!-- class="figure" --> 
     <a id="JFXCH103" name="JFXCH103"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref34" name="sthref34"></a> 
      <h2 class="sect1">Creating an Area Chart</h2> 
      <p>To create a simple area chart in your application, at minimum, you must define two axes, create the <code>AreaChart</code> object by instantiating the <code>AreaChart</code> class, create one or more series of data by using the <code>XYChart.Series</code> class, and assign the data to the chart.</p> 
      <p>When instantiating the <code>AreaChart</code> class, you can specify the observable list with a series of data within a constructor, or add the series later by calling the <code>getData</code> and <code>addAll</code> methods on the <code>AreaChart</code> object.</p> 
      <p><a href="#CIHEAHJD">Example 4-1</a> creates an area chart to illustrate temperature monitoring data. The example uses two series of data collected for the periods of April and May.</p> 
      <div class="example">
       <a id="CIHEAHJD" name="CIHEAHJD"></a>
       <a id="JFXCH150" name="JFXCH150"></a> 
       <p class="titleinexample">Example 4-1 Creating an Area Chart</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.chart.AreaChart;
import javafx.scene.chart.NumberAxis;
import javafx.scene.chart.XYChart;
import javafx.stage.Stage;
 
 
public class AreaChartSample extends Application {
 
    @Override public void start(Stage stage) {
        stage.setTitle(&quot;Area Chart Sample&quot;);
        final NumberAxis xAxis = new NumberAxis(1, 31, 1);
        final NumberAxis yAxis = new NumberAxis();
        final AreaChart&lt;Number,Number&gt; ac = 
            new AreaChart&lt;Number,Number&gt;(xAxis,yAxis);
        ac.setTitle(&quot;Temperature Monitoring (in Degrees C)&quot;);
 
        XYChart.Series seriesApril= new XYChart.Series();
        seriesApril.setName(&quot;April&quot;);
        seriesApril.getData().add(new XYChart.Data(1, 4));
        seriesApril.getData().add(new XYChart.Data(3, 10));
        seriesApril.getData().add(new XYChart.Data(6, 15));
        seriesApril.getData().add(new XYChart.Data(9, 8));
        seriesApril.getData().add(new XYChart.Data(12, 5));
        seriesApril.getData().add(new XYChart.Data(15, 18));
        seriesApril.getData().add(new XYChart.Data(18, 15));
        seriesApril.getData().add(new XYChart.Data(21, 13));
        seriesApril.getData().add(new XYChart.Data(24, 19));
        seriesApril.getData().add(new XYChart.Data(27, 21));
        seriesApril.getData().add(new XYChart.Data(30, 21));
        
        XYChart.Series seriesMay = new XYChart.Series();
        seriesMay.setName(&quot;May&quot;);
        seriesMay.getData().add(new XYChart.Data(1, 20));
        seriesMay.getData().add(new XYChart.Data(3, 15));
        seriesMay.getData().add(new XYChart.Data(6, 13));
        seriesMay.getData().add(new XYChart.Data(9, 12));
        seriesMay.getData().add(new XYChart.Data(12, 14));
        seriesMay.getData().add(new XYChart.Data(15, 18));
        seriesMay.getData().add(new XYChart.Data(18, 25));
        seriesMay.getData().add(new XYChart.Data(21, 25));
        seriesMay.getData().add(new XYChart.Data(24, 23));
        seriesMay.getData().add(new XYChart.Data(27, 26));
        seriesMay.getData().add(new XYChart.Data(31, 26));
        
        Scene scene  = new Scene(ac,800,600);
        ac.getData().addAll(seriesApril, seriesMay);
        stage.setScene(scene);
        stage.show();
    }
 
    public static void main(String[] args) {
        launch(args);
    }
}
</pre>
      </div> 
      <!-- class="example" --> 
      <p>This example creates two <code>NumberAxis</code> objects to present numerical data on horizontal and vertical axes. Values rendered on the horizontal axis (X) are retrieved from the first parameter of the <code>XYChart.Data</code> objects, whereas the second parameter provides data for the vertical axis (Y).</p> 
      <p>The series of data is assigned to the chart by using the <code>getData</code> and <code>addAll</code> methods. Because the <code>seriesMay</code> data is added last, the corresponding green area overlays the yellow area that shows April data.</p> 
      <p>The result of compiling and running the application, is shown in <a href="#CIHJIHHB">Figure 4-2</a>.</p> 
      <div class="figure">
       <a id="CIHJIHHB" name="CIHJIHHB"></a>
       <a id="JFXCH151" name="JFXCH151"></a> 
       <p class="titleinfigure">Figure 4-2 Area Chart with Two Series of Data</p> 
       <img src="img/area-create.png" alt="Description of Figure 4-2 follows" title="Description of Figure 4-2 follows" longdesc="img_text/area-create.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" -->
     </div> 
     <!-- class="sect1" --> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref36" name="sthref36"></a> 
      <h2 class="sect1">Creating a Stacked Area Chart</h2> 
      <p>You can represent data in the area chart by using the <code>StackedAreaChart</code> class. This class builds areas that are stacked so that each series adjoins but does not overlap the preceding series. <a href="#CIHHGBFJ">Example 4-2</a> implements this task.</p> 
      <div class="example">
       <a id="CIHHGBFJ" name="CIHHGBFJ"></a> 
       <p class="titleinexample">Example 4-2 Creating a Stacked Area Chart</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.chart.NumberAxis;
import javafx.scene.chart.StackedAreaChart;
import javafx.scene.chart.XYChart;
import javafx.stage.Stage;
 
public class StackedAreaChartSample extends Application {
 
    final NumberAxis xAxis = new NumberAxis(1, 31, 1);
    final NumberAxis yAxis = new NumberAxis();
    final StackedAreaChart&lt;Number, Number&gt; sac =
            new StackedAreaChart&lt;Number, Number&gt;(xAxis, yAxis);
 
    @Override
    public void start(Stage stage) {
        stage.setTitle(&quot;Area Chart Sample&quot;);
        sac.setTitle(&quot;Temperature Monitoring (in Degrees C)&quot;);
        XYChart.Series&lt;Number, Number&gt; seriesApril =
                new XYChart.Series&lt;Number, Number&gt;();
        seriesApril.setName(&quot;April&quot;);
        seriesApril.getData().add(new XYChart.Data(1, 4));
        seriesApril.getData().add(new XYChart.Data(3, 10));
        seriesApril.getData().add(new XYChart.Data(6, 15));
        seriesApril.getData().add(new XYChart.Data(9, 8));
        seriesApril.getData().add(new XYChart.Data(12, 5));
        seriesApril.getData().add(new XYChart.Data(15, 18));
        seriesApril.getData().add(new XYChart.Data(18, 15));
        seriesApril.getData().add(new XYChart.Data(21, 13));
        seriesApril.getData().add(new XYChart.Data(24, 19));
        seriesApril.getData().add(new XYChart.Data(27, 21));
        seriesApril.getData().add(new XYChart.Data(30, 21));
        XYChart.Series&lt;Number, Number&gt; seriesMay =
                new XYChart.Series&lt;Number, Number&gt;();
        seriesMay.setName(&quot;May&quot;);
        seriesMay.getData().add(new XYChart.Data(1, 20));
        seriesMay.getData().add(new XYChart.Data(3, 15));
        seriesMay.getData().add(new XYChart.Data(6, 13));
        seriesMay.getData().add(new XYChart.Data(9, 12));
        seriesMay.getData().add(new XYChart.Data(12, 14));
        seriesMay.getData().add(new XYChart.Data(15, 18));
        seriesMay.getData().add(new XYChart.Data(18, 25));
        seriesMay.getData().add(new XYChart.Data(21, 25));
        seriesMay.getData().add(new XYChart.Data(24, 23));
        seriesMay.getData().add(new XYChart.Data(27, 26));
        seriesMay.getData().add(new XYChart.Data(31, 26));
        Scene scene = new Scene(sac, 800, 600);
        sac.getData().addAll(seriesApril, seriesMay);
        stage.setScene(scene);
        stage.show();
    }
 
    public static void main(String[] args) {
        launch(args);
    }
}
</pre>
      </div> 
      <!-- class="example" --> 
      <p>When you compile and run this application, it creates the chart shown in <a href="#CIHGIDGE">Figure 4-3</a>.</p> 
      <div class="figure">
       <a id="CIHGIDGE" name="CIHGIDGE"></a> 
       <p class="titleinfigure">Figure 4-3 Stacked Area Chart with Two Areas</p> 
       <img src="img/area-stacked.png" alt="Description of Figure 4-3 follows" title="Description of Figure 4-3 follows" longdesc="img_text/area-stacked.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" --> 
      <p>Compare the data shown in <a href="#CIHGIDGE">Figure 4-3</a> with the same data in <a href="#CIHJIHHB">Figure 4-2</a>. The areas in the stacked area chart show cumulative values on the vertical axis at any given point along the horizontal axis. For example, the value on the vertical axis shown for May 15th in the stacked area chart is 36, which does not correspond to the actual temperature that day. This value represents the cumulative result for temperatures on April 15th and May 15th.</p> 
      <p>When you develop area charts in your JavaFX applications, remember that data on the vertical axes is interpreted according to the type of area charts (<code>AreaChart</code> or <code>StackedAreaChart</code>). Choose the data representation best suited for the task of the application.</p> 
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXCH152" name="JFXCH152"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref38" name="sthref38"></a> 
      <h2 class="sect1">Setting Axis and Tick Properties</h2> 
      <p>The output of the Temperature Monitoring application in <a href="#CIHJIHHB">Figure 4-2</a> and <a href="#CIHGIDGE">Figure 4-3</a> presents the numerical values on the axes in the default double format., rather than in a user-friendly manner. For example, the month days should be integers and in the range of 1 to 31, instead of float numbers.</p> 
      <p>The JavaFX SDK API provides several methods to adjust the appearance of values rendered on chart axes. <a href="#CIHJGIAG">Figure 4-4</a> shows the main elements of the chart axis, including tick marks and tick labels that indicate numeric values of the range.</p> 
      <div class="figure">
       <a id="CIHJGIAG" name="CIHJGIAG"></a>
       <a id="JFXCH153" name="JFXCH153"></a> 
       <p class="titleinfigure">Figure 4-4 Elements of an Axis</p> 
       <img src="img/area-tick.png" alt="Description of Figure 4-4 follows" title="Description of Figure 4-4 follows" longdesc="img_text/area-tick.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" --> 
      <p>You can specify the minimum and maximum values in the numerical range by using a constructor of the <code>NumberAxis</code> class or the corresponding methods, as shown in <a href="#CIHHBFJF">Example 4-3</a>.</p> 
      <div class="example">
       <a id="CIHHBFJF" name="CIHHBFJF"></a>
       <a id="JFXCH154" name="JFXCH154"></a> 
       <p class="titleinexample">Example 4-3 Specifying a Data Range for the Horizontal Axis</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
//Using the NumberAxis constructor
final NumberAxis xAxis = new NumberAxis(1, 31, 1);
//Using the corresponding methods
xAxis.setLowerBound(1);
xAxis.setUpperBound(30);
xAxis.setTickUnit(1);
</pre>
      </div> 
      <!-- class="example" --> 
      <p>When using the three-parameter constructor of the <code>NumberAxis</code> class, remember that the first parameter defines the minimum value in the range, the second parameter is the maximum value in the range, and the third parameter defines the tick unit, a value between two tick marks on the axis.</p> 
      <p>Additionally, if you want to prohibit showing minor ticks on the horizontal axis, then specify 0 for the <code>minorTickCount</code> property, as shown in <a href="#CIHHDHAH">Example 4-4</a>.</p> 
      <div class="example">
       <a id="CIHHDHAH" name="CIHHDHAH"></a>
       <a id="JFXCH155" name="JFXCH155"></a> 
       <p class="titleinexample">Example 4-4 Setting Zero Value for Minor Tick Count</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
xAxis.setMinorTickCount(0);
</pre>
      </div> 
      <!-- class="example" --> 
      <p>This property defines the number of minor ticks to be displayed between each major tick mark. By setting its value to 0, you disable the minor ticks for the horizontal axis.</p> 
      <p>When you add the code lines from <a href="#CIHHBFJF">Example 4-3</a> and <a href="#CIHHDHAH">Example 4-4</a> to the Temperature Monitoring application, the horizontal axis changes as shown in <a href="#CIHHHGJI">Figure 4-5</a>.</p> 
      <div class="figure">
       <a id="CIHHHGJI" name="CIHHHGJI"></a>
       <a id="JFXCH156" name="JFXCH156"></a> 
       <p class="titleinfigure">Figure 4-5 Setting the Horizontal Axis</p> 
       <img src="img/area-xaxis.png" alt="Description of Figure 4-5 follows" title="Description of Figure 4-5 follows" longdesc="img_text/area-xaxis.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" --> 
      <p>If your application requires no tick labels to be shown, use the <code>setTickLabelsVisible</code> method with the <code>false</code> value. Similarly, use <code>setTickMarkVisible</code> method with the <code>false</code> value if you do not want tick marks to be visible.</p> 
      <p>Use the code line shown in <a href="#CIHGEGIB">Example 4-5</a> to adjust the range of values for the vertical axis.</p> 
      <div class="example">
       <a id="CIHGEGIB" name="CIHGEGIB"></a>
       <a id="JFXCH157" name="JFXCH157"></a> 
       <p class="titleinexample">Example 4-5 Specifying a Data Range for the Vertical Axis</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
final NumberAxis yAxis = new NumberAxis(0, 27, 5);
</pre>
      </div> 
      <!-- class="example" --> 
      <p>You can also adjust tick marks so that minor and major tick marks have equal length. Use the <code>tickLength</code> and <code>minorTickLength</code> properties as shown in <a href="#CIHGJJIH">Example 4-6</a>.</p> 
      <div class="example">
       <a id="CIHGJJIH" name="CIHGJJIH"></a>
       <a id="JFXCH158" name="JFXCH158"></a> 
       <p class="titleinexample">Example 4-6 Adjusting the Length of Major and Minor Tick Marks</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
yAxis.setMinorTickLength(yAxis.getTickLength());
</pre>
      </div> 
      <!-- class="example" --> 
      <p>When you add code lines from <a href="#CIHGEGIB">Example 4-5</a> and <a href="#CIHGJJIH">Example 4-6</a> to the Temperature Monitoring application, the vertical axes changes as shown in <a href="#CIHDCDFA">Figure 4-6</a>.</p> 
      <div class="figure">
       <a id="CIHDCDFA" name="CIHDCDFA"></a>
       <a id="JFXCH159" name="JFXCH159"></a> 
       <p class="titleinfigure">Figure 4-6 Setting the Vertical Axis</p> 
       <img src="img/area-yaxis.png" alt="Description of Figure 4-6 follows" title="Description of Figure 4-6 follows" longdesc="img_text/area-yaxis.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" -->
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXCH160" name="JFXCH160"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref42" name="sthref42"></a> 
      <h2 class="sect1">Adding Negative Values</h2> 
      <p>Because the vertical axis in the Temperature Monitoring application is created by using the <code>NumberAxis</code> class, you can specify negative values for the area chart data.</p> 
      <p>Create one more series of data as shown in <a href="#CIHGGFBD">Example 4-7</a>.</p> 
      <div class="example">
       <a id="CIHGGFBD" name="CIHGGFBD"></a>
       <a id="JFXCH161" name="JFXCH161"></a> 
       <p class="titleinexample">Example 4-7 Adding a Series of Data with Negative Values</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.chart.AreaChart;
import javafx.scene.chart.NumberAxis;
import javafx.scene.chart.XYChart;
import javafx.stage.Stage;
 
 
public class AreaChartSample extends Application {
 
    @Override public void start(Stage stage) {
        stage.setTitle(&quot;Area Chart Sample&quot;);
        final NumberAxis xAxis = new NumberAxis(1, 31, 1);
        xAxis.setMinorTickCount(0);    
        <span class="bold">final NumberAxis yAxis = new NumberAxis(-5, 27, 5)</span>;        
        yAxis.setMinorTickLength(yAxis.getTickLength());
        yAxis.setForceZeroInRange(false);        
        
        final AreaChart&lt;Number,Number&gt; ac = 
            new AreaChart&lt;Number,Number&gt;(xAxis,yAxis);       
        ac.setTitle(&quot;Temperature Monitoring (in Degrees C)&quot;);
 
        XYChart.Series seriesApril= new XYChart.Series();
        seriesApril.setName(&quot;April&quot;);
        seriesApril.getData().add(new XYChart.Data(0, 4));
        seriesApril.getData().add(new XYChart.Data(3, 10));
        seriesApril.getData().add(new XYChart.Data(6, 15));
        seriesApril.getData().add(new XYChart.Data(9, 8));
        seriesApril.getData().add(new XYChart.Data(12, 5));
        seriesApril.getData().add(new XYChart.Data(15, 18));
        seriesApril.getData().add(new XYChart.Data(18, 15));
        seriesApril.getData().add(new XYChart.Data(21, 13));
        seriesApril.getData().add(new XYChart.Data(24, 19));
        seriesApril.getData().add(new XYChart.Data(27, 21));
        seriesApril.getData().add(new XYChart.Data(30, 21));
        
        XYChart.Series seriesMay = new XYChart.Series();
        seriesMay.setName(&quot;May&quot;);
        seriesMay.getData().add(new XYChart.Data(0, 20));
        seriesMay.getData().add(new XYChart.Data(3, 15));
        seriesMay.getData().add(new XYChart.Data(6, 13));
        seriesMay.getData().add(new XYChart.Data(9, 12));
        seriesMay.getData().add(new XYChart.Data(12, 14));
        seriesMay.getData().add(new XYChart.Data(15, 18));
        seriesMay.getData().add(new XYChart.Data(18, 25));
        seriesMay.getData().add(new XYChart.Data(21, 25));
        seriesMay.getData().add(new XYChart.Data(24, 23));
        seriesMay.getData().add(new XYChart.Data(27, 26));
        seriesMay.getData().add(new XYChart.Data(31, 26));
        
        <span class="bold">XYChart.Series seriesMarch = new XYChart.Series();</span>
        <span class="bold">seriesMarch.setName(&quot;March&quot;);</span>
        <span class="bold">seriesMarch.getData().add(new XYChart.Data(0, -2));</span>
        <span class="bold">seriesMarch.getData().add(new XYChart.Data(3, -4));</span>
        <span class="bold">seriesMarch.getData().add(new XYChart.Data(6, 0));</span>
        <span class="bold">seriesMarch.getData().add(new XYChart.Data(9, 5));</span>
        <span class="bold">seriesMarch.getData().add(new XYChart.Data(12, -4));</span>
        <span class="bold">seriesMarch.getData().add(new XYChart.Data(15, 6));</span>
        <span class="bold">seriesMarch.getData().add(new XYChart.Data(18, 8));</span>
        <span class="bold">seriesMarch.getData().add(new XYChart.Data(21, 14));</span>
        <span class="bold">seriesMarch.getData().add(new XYChart.Data(24, 4));</span>
        <span class="bold">seriesMarch.getData().add(new XYChart.Data(27, 6));</span>
        <span class="bold">seriesMarch.getData().add(new XYChart.Data(31, 6));</span>      
        
        
        Scene scene  = new Scene(ac,800,600);
        <span class="bold">ac.getData().addAll(seriesMarch, seriesApril, seriesMay);</span>
        stage.setScene(scene);
        stage.show();
    }
 
    public static void main(String[] args) {
        launch(args);
    }
}
</pre>
      </div> 
      <!-- class="example" --> 
      <p><a href="#CIHICDIB">Figure 4-7</a> demonstrates the Temperature Monitoring application modified to display the weather data for three months: March, April, and May.</p> 
      <div class="figure">
       <a id="CIHICDIB" name="CIHICDIB"></a>
       <a id="JFXCH162" name="JFXCH162"></a> 
       <p class="titleinfigure">Figure 4-7 Adding Negative Data</p> 
       <img src="img/area-negative.png" alt="Description of Figure 4-7 follows" title="Description of Figure 4-7 follows" longdesc="img_text/area-negative.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" -->
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXCH201" name="JFXCH201"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref44" name="sthref44"></a> 
      <h2 class="sect1">Styling Area Charts</h2> 
      <p>The color for each month in <a href="#CIHGGFBD">Example 4-7</a> is defined by the order of the corresponding data series as declared in the <code>addAll</code> method. That is why the March area in <a href="#CIHICDIB">Figure 4-7</a> is painted yellow. You can set the color for <code>AreaChart</code> objects through CSS.</p> 
      <p>Create the <code>Chart.css</code> file and save it in the same directory as the main class of the <code>AreaChartSample</code> application. Add the lines shown in <a href="#BABIABHB">Example 4-8</a> to the <code>Chart.css</code> file.</p> 
      <div class="example">
       <a id="BABIABHB" name="BABIABHB"></a>
       <a id="JFXCH202" name="JFXCH202"></a> 
       <p class="titleinexample">Example 4-8 CSS Styles for an Area Chart</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
.default-color0.chart-area-symbol { -fx-background-color: #e9967a, #ffa07a; }
.default-color1.chart-area-symbol { -fx-background-color: #f0e68c, #fffacd; }
.default-color2.chart-area-symbol { -fx-background-color: #dda0dd, #d8bfd855; }
 
.default-color0.chart-series-area-line { -fx-stroke: #e9967a; }
.default-color1.chart-series-area-line { -fx-stroke: #f0e68c; }
.default-color2.chart-series-area-line { -fx-stroke: #dda0dd; }
 
.default-color0.chart-series-area-fill { -fx-fill: #ffa07a55; }
.default-color1.chart-series-area-fill { -fx-fill: #fffacd55; }
.default-color2.chart-series-area-fill { -fx-fill: #d8bfd855; }
</pre>
      </div> 
      <!-- class="example" --> 
      <p>The <code>chart-area-symbol</code> CSS class defines parameters of the symbol in the chart legend for a particular data series. <a href="#BABIABHB">Example 4-8</a> sets the inner and outer colors for the circles in the chart legend.</p> 
      <p>The <code>chart-series-area-line</code> CSS class sets parameters for the area chart lines. In this example, the color of the line stroke. The <code>chart-series-area-fill</code> CSS class defines the color and the opacity level of the areas.</p> 
      <p>These styles are applied to the <code>AreaChartSample</code> application by using the <code>getStylesheets()</code> method of the <code>Scene</code> class, as shown <a href="#BABJAAAA">Example 4-9</a>.</p> 
      <div class="example">
       <a id="BABJAAAA" name="BABJAAAA"></a>
       <a id="JFXCH203" name="JFXCH203"></a> 
       <p class="titleinexample">Example 4-9 Applying CSS Styles to the Scene</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
scene.getStylesheets().add(&quot;areachartsample/Chart.css&quot;);
</pre>
      </div> 
      <!-- class="example" --> 
      <p>Compiling and running this application produces the modified appearance of the area chart shown in <a href="#BABFBADI">Figure 4-8</a>.</p> 
      <div class="figure">
       <a id="BABFBADI" name="BABFBADI"></a>
       <a id="JFXCH204" name="JFXCH204"></a> 
       <p class="titleinfigure">Figure 4-8 Styled Area Chart</p> 
       <img src="img/area-css.png" alt="Description of Figure 4-8 follows" title="Description of Figure 4-8 follows" longdesc="img_text/area-css.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" --> 
      <p>You can learn more about using CSS styles in JavaFX applications from the <a href="../api/javafx/scene/doc-files/cssref.html">JavaFX CSS Reference Guide</a> and the <a href="../css_tutorial/jfxpub-css_tutorial.htm">Skinning JavaFX Applications with CSS</a> tutorial.</p> 
      <p class="itemizedlisttitle">Related API Documentation&nbsp;</p> 
      <ul> 
       <li> <p><code>AreaChart</code></p> </li> 
       <li> <p><code>Chart</code></p> </li> 
       <li> <p><code>XYChart</code></p> </li> 
       <li> <p><code>XYChart.Data</code></p> </li> 
       <li> <p><code>XYChart.Series</code></p> </li> 
       <li> <p><code>NumberAxis</code></p> </li> 
      </ul> 
     </div> 
     <!-- class="sect1" --> 
     <!-- /////////////// End content copied from DARB output ////////////// --> 
    </div> 
    <!-- Insert Sections Here! --> 
    <!-- Footer
      ================================================== --> 
    <footer class="footer"> 
     <!-- UY BEGIN --> 
     <div id="uyan_frame"></div> 
     <script type="text/javascript" id="UYScript" src="http://v1.uyan.cc/js/iframe.js?UYUserId=1529249" async=""></script> 
     <!-- UY END --> 
    </footer> 
   </div>
   <div class=" span3" style="padding-top: 110px;">
    <div class=" well">
     <ul class=" nav nav-list">
      <li class=" nav-header">本章目录</li>
      <li><a href="jfxpub-charts.htm">About This Tutorial</a></li>
      <li><a href="chart-overview.htm">Introduction to JavaFX Charts</a></li>
      <li><a href="pie-chart.htm">Pie Chart</a></li>
      <li><a href="line-chart.htm">Line Chart</a></li>
      <li class=" active"><a href="area-chart.htm">Area Chart</a></li>
      <li><a href="bubble-chart.htm">Bubble Chart</a></li>
      <li><a href="scatter-chart.htm">Scatter Chart</a></li>
      <li><a href="bar-chart.htm">Bar Chart</a></li>
      <li><a href="css-styles.htm">Styling Charts with CSS</a></li>
      <li class=" divider"></li>
      <li class=" nav-header">源码下载</li>
      <li><a href="http://download.oracle.com/javafx/2/charts/AreaChartSample.zip">AreaChartSample.zip</a></li>
      <li><a href="http://download.oracle.com/javafx/2/charts/BarChartSample.zip">BarChartSample.zip</a></li>
      <li><a href="http://download.oracle.com/javafx/2/charts/BubbleChartSample.zip">BubbleChartSample.zip</a></li>
      <li><a href="http://download.oracle.com/javafx/2/charts/LineChartSample.zip">LineChartSample.zip</a></li>
      <li><a href="http://download.oracle.com/javafx/2/charts/PieChartSample.zip">PieChartSample.zip</a></li>
      <li><a href="http://download.oracle.com/javafx/2/charts/ScatterChartSample.zip">ScatterChartSample.zip</a></li>
      <li class=" divider"></li>
      <li class=" nav-header">版本信息</li>
      <li>平台版本：JavaFX 2.1</li>
      <li>翻译编辑：(未翻译)</li>
      <li>最后更新：2012年7月28日</li>
     </ul>
    </div>
   </div>
   <!-- /container --> 
  </div> 
  <!-- JiaThis Button BEGIN --> 
  <script type="text/javascript">var jiathis_config = {data_track_clickback:true};</script> 
  <script type="text/javascript" src="http://v3.jiathis.com/code/jiathis_r.js?type=left&amp;move=0&amp;btn=l2.gif&amp;uid=1529249" charset="utf-8"></script> 
  <!-- JiaThis Button END --> 
  <!-- Le javascript
    ================================================== --> 
  <!-- Placed at the end of the document so the pages load faster --> 
  <script src="../../assets/js/jquery.min.js"></script> 
  <script src="../../assets/js/easing.js" type="text/javascript"></script> 
  <script src="../../assets/js/jquery.ui.totop.min.js" type="text/javascript"></script> 
  <script src="../../assets/js/google-code-prettify/prettify.js"></script> 
  <script type="text/javascript">
		$(document).ready(function() {
			/*
			var defaults = {
	  			containerID: 'toTop', // fading element id
				containerHoverID: 'toTopHover', // fading element hover id
				scrollSpeed: 1200,
				easingType: 'linear' 
	 		};
			*/
			$().UItoTop({ easingType: 'easeOutQuart' });
		});
	</script> 
  <script src="../../assets/js/bootstrap.min.js"></script> 
  <script src="../../assets/js/application.js"></script>   
 </body>
</html>