<!DOCTYPE html>
<html>
 <head> 
  <meta charset="utf-8" /> 
  <title>Creating a Form in JavaFX &middot; Getting Started with JavaFX &middot; JavaFx 2 中文文档</title> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0" /> 
  <meta name="keywords" content="JavaFx JavaFx2 JavaFx文档 JavaFx2文档 JavaFx2中文文档 JavaFx中文文档" /> 
  <meta name="description" content="JavaFx 2 中文文档" /> 
  <meta name="author" content="" /> 
  <!-- Le styles --> 
  <link href="../../assets/css/bootstrap.css" rel="stylesheet" /> 
  <link href="../../assets/css/bootstrap-responsive.css" rel="stylesheet" /> 
  <link href="../../assets/css/docs.css" rel="stylesheet" /> 
  <link href="../../assets/js/google-code-prettify/prettify.css" rel="stylesheet" /> 
  <link media="screen,projection" href="../../assets/css/ui.totop.css" rel="stylesheet" /> 
  <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements --> 
  <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]--> 
  <!-- Le fav and touch icons --> 
  <link rel="shortcut icon" href="../../assets/ico/favicon.ico" /> 
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="../../assets/ico/apple-touch-icon-144-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="../../assets/ico/apple-touch-icon-114-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="../../assets/ico/apple-touch-icon-72-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" href="../../assets/ico/apple-touch-icon-57-precomposed.png" /> 
  <script src="../../assets/js/ga.js"></script> 
 </head> 
 <body data-spy="scroll" data-target=".subnav" data-offset="50"> 
  <!-- Navbar
    ================================================== --> 
  <div class="navbar navbar-fixed-top"> 
   <div class="navbar-inner"> 
    <div class="container"> 
     <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse"> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> 
     <a class="brand" href="../../index.html">JavaFx 2 中文文档</a> 
     <div class="nav-collapse collapse"> 
      <ul class="nav"> 
       <li class=""><a href="../../index.html"><i class="icon icon-home icon-white"></i> 首页</a></li> 
       <li class="divider-vertical"></li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">入门<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/overview/jfxpub-overview.htm">什么是JavaFx？</a></li> 
         <li><a href="../../2/get_started/jfxpub-get_started.htm">开始使用JavaFx</a></li> 
         <li><a href="../../2/fxml_get_started/jfxpub-fxml_get_started.htm">开始使用FXML</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">用户界面<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/layout/jfxpub-layout.htm">使用布局</a></li> 
         <li><a href="../../2/text/jfxpub-text.htm">添加文本</a></li> 
         <li><a href="../../2/ui_controls/jfxpub-ui_controls.htm">使用用户界面控件</a></li> 
         <li><a href="../../2/events/jfxpub-events.htm">处理事件</a></li> 
         <li><a href="../../2/charts/jfxpub-charts.htm">创建图表</a></li> 
         <li><a href="../../2/webview/jfxpub-webview.htm">添加HTML内容</a></li> 
         <li><a href="../../2/css_tutorial/jfxpub-css_tutorial.htm">使用CSS为应用程序设置皮肤</a></li> 
         <li><a href="../../2/drag_drop/jfxpub-drag_drop.htm">拖放数据</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">效果&middot;动画&middot;媒体<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/visual_effects/jfxpub-visual_effects.htm">创建视觉效果</a></li> 
         <li><a href="../../2/transformations/jfxpub-transformations.htm">添加二维和三维变形</a></li> 
         <li><a href="../../2/animations/jfxpub-animations.htm">添加过渡和动画</a></li> 
         <li><a href="../../2/media/jfxpub-media.htm">嵌入媒体</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">应用程序逻辑<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/architecture/jfxpub-architecture.htm">架构和框架</a></li> 
         <li><a href="../../2/scenegraph/jfxpub-scenegraph.htm">使用场景图</a></li> 
         <li><a href="../../2/binding/jfxpub-binding.htm">使用属性和绑定</a></li> 
         <li><a href="../../2/collections/jfxpub-collections.htm">使用集合</a></li> 
         <li><a href="../../2/threads/jfxpub-threads.htm">并发和线程</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">部署和更多<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/deployment/jfxpub-deployment.htm">打包和部署</a></li> 
         <li><a href="../../2/swing/jfxpub-swing.htm">在Swing中使用JavaFx</a></li> 
         <li><a href="../../2/swt_interoperability/jfxpub-swt_interoperability.htm">与SWT的互操作性</a></li> 
         <li><a href="../../2/doclet/jfxpub-doclet.htm">使用Doclet</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">参考<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="http://docs.oracle.com/javafx/2/api/index.html" target="_blank"><i class="icon-share icon"></i> API文档</a></li> 
         <li><a href="http://docs.oracle.com/javafx/2/api/javafx/scene/doc-files/cssref.html" target="_blank"><i class="icon-share icon"></i> CSS参考指南</a></li> 
         <li><a href="http://docs.oracle.com/javafx/2/api/javafx/fxml/doc-files/introduction_to_fxml.html" target="_blank"><i class="icon-share icon"></i> FXML简介</a></li> 
        </ul> </li> 
       <li class="divider-vertical"></li> 
       <li class=""><a href="../../more.html"><i class="icon icon-plus-sign icon-white"></i> 更多精彩</a></li> 
       <li class=""><a href="../../license.html"><i class="icon icon-book icon-white"></i> 许可说明</a></li> 
       <li class=""><a href="../../about.html"><i class="icon icon-user icon-white"></i> 关于我们</a></li> 
      </ul> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div class="row"> 
   <div id="container" class="container span9 offset1"> 
    <!-- Masthead
================================================== --> 
    <header class="jumbotron subhead" id="overview"> 
     <!-- Insert Header Here! --> 
     <h1>Getting Started with JavaFX</h1>
     <p class=" lead">Creating a Form in JavaFX</p>
     <ul class=" pager">
      <li class=" previous"><a href="hello_world.htm">←上一篇</a></li>
      <li class=" next"><a href="css.htm">下一篇→</a></li>
     </ul>
     <hr />
    </header>
    <div id="ind"> 
     <!-- /////////////// Start content copied from DARB output ////////////// --> 
     <a id="BABCIIBJ" name="BABCIIBJ"></a>
     <a id="JFXGS165" name="JFXGS165"></a>
     <a id="BABDDGEE" name="BABDDGEE"></a>  
     <a id="JFXGS166" name="JFXGS166"></a> 
     <p>Creating a form is a common activity when developing an application. In this tutorial, you will use JavaFX to build the login form shown in <a href="#BABJHICA">Figure 2-1</a>. This tutorial teaches you the basics of screen layout, how to add controls to a layout pane, and how to create input events.</p> 
     <div class="figure">
      <a id="BABJHICA" name="BABJHICA"></a>
      <a id="JFXGS245" name="JFXGS245"></a> 
      <p class="titleinfigure">Figure 2-1 Login Form</p> 
      <img src="img/login.png" alt="Description of Figure 2-1 follows" title="Description of Figure 2-1 follows" longdesc="img_text/login.htm" />
      <br /> 
      <br /> 
      <br />
     </div> 
     <!-- class="figure" --> 
     <p>The tool used in this Getting Started tutorial is NetBeans IDE. Before you begin, ensure that the version of NetBeans IDE that you are using supports JavaFX 2. See the <a href="../../release-documentation.html">System Requirements</a> for details.</p> 
     <a id="JFXGS168" name="JFXGS168"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref8" name="sthref8"></a> 
      <h2 class="sect1">Create the Project</h2> 
      <p>Your first task is to create a JavaFX project in NetBeans IDE and name it Login:</p> 
      <ol> 
       <li> <p>From the <span class="bold">File</span> menu, choose <span class="bold">New Project</span>.</p> </li> 
       <li> <p>In the <span class="bold">JavaFX</span> application category, choose <span class="bold">JavaFX Application</span>. Click <span class="bold">Next</span>.</p> </li> 
       <li> <p>Name the project <span class="bold">Login</span> and click <span class="bold">Finish</span>.</p> <p>When you create a JavaFX project, NetBeans IDE provides a Hello World application as a starting point, which you have already seen if you followed the <a href="hello_world.htm">Hello World</a> tutorial.</p> </li> 
       <li> <p>Remove the <code>start()</code> method that NetBeans IDE generated and replace it with the code in <a href="#CFHIBBBH">Example 2-1</a>.</p> 
        <div class="example">
         <a id="CFHIBBBH" name="CFHIBBBH"></a>
         <a id="JFXGS169" name="JFXGS169"></a> 
         <p class="titleinexample">Example 2-1 Application Stage</p> 
         <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
@Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle(&quot;JavaFX Welcome&quot;);
        
        primaryStage.show();
    }
</pre>
        </div> 
        <!-- class="example" --></li> 
      </ol> 
      <p><span class="bold">Tip:</span> After you add sample code into a NetBeans project, press Ctrl (or Cmd) + Shift + I to import the required packages. When there is a choice of import statements, choose the one that starts with <code>javafx</code>.</p> 
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXGS170" name="JFXGS170"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref9" name="sthref9"></a> 
      <h2 class="sect1">Create a GridPane Layout</h2> 
      <p>For the login form, use a <code>GridPane</code> layout because it enables you to create a flexible grid of rows and columns in which to lay out controls. You can place controls in any cell in the grid, and you can make controls span cells as needed.</p> 
      <p>The code to create the <code>GridPane</code> layout is in <a href="#CFHEAHGB">Example 2-2</a>. Add the code before the line <code>primaryStage.show();</code></p> 
      <div class="example">
       <a id="CFHEAHGB" name="CFHEAHGB"></a>
       <a id="JFXGS171" name="JFXGS171"></a> 
       <p class="titleinexample">Example 2-2 GridPane with Gap and Padding Properties</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
GridPane grid = new GridPane();
grid.setAlignment(Pos.CENTER);
grid.setHgap(10);
grid.setVgap(10);
grid.setPadding(new Insets(25, 25, 25, 25));

Scene scene = new Scene(grid, 300, 275);
primaryStage.setScene(scene);
</pre>
      </div> 
      <!-- class="example" --> 
      <p><a href="#CFHEAHGB">Example 2-2</a> creates a <code>GridPane</code> object and assigns it to the variable named <code>grid</code>. The alignment property changes the default position of the grid from the top left of the scene to the center. The gap properties manage the spacing between the rows and columns, while the padding property manages the space around the edges of the grid pane. The insets are in the order of top, right, bottom, and left. In this example, there are <code>25</code> pixels of padding on each side.</p> 
      <p>The scene is created with the grid pane as the root node, which is a common practice when working with layout containers. Thus, as the window is resized, the nodes within the grid pane are resized according to their layout constraints. In this example, the grid pane remains in the center when you grow or shrink the window. The padding properties ensure there is a padding around the grid pane when you make the window smaller.</p> 
      <p>This code sets the scene width and height to 300 by 275. If you do not set the scene dimensions, the scene defaults to the minimum size needed to display its contents.</p> 
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXGS172" name="JFXGS172"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref10" name="sthref10"></a> 
      <h2 class="sect1">Add Text, Labels, and Text Fields</h2> 
      <p>Looking at <a href="#BABJHICA">Figure 2-1</a>, you can see that the form requires the title &quot;Welcome &quot; and text and password fields for gathering information from the user. The code for creating these controls is in <a href="#CFHFDFHJ">Example 2-3</a>. Add this code after the line that sets the grid padding property.</p> 
      <div class="example">
       <a id="CFHFDFHJ" name="CFHFDFHJ"></a>
       <a id="JFXGS173" name="JFXGS173"></a> 
       <p class="titleinexample">Example 2-3 Controls</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
Text scenetitle = new Text(&quot;Welcome&quot;);
scenetitle.setFont(Font.font(&quot;Tahoma&quot;, FontWeight.NORMAL, 20));
grid.add(scenetitle, 0, 0, 2, 1);

Label userName = new Label(&quot;User Name:&quot;);
grid.add(userName, 0, 1);

TextField userTextField = new TextField();
grid.add(userTextField, 1, 1);

Label pw = new Label(&quot;Password:&quot;);
grid.add(pw, 0, 2);

PasswordField pwBox = new PasswordField();
grid.add(pwBox, 1, 2);
</pre>
      </div> 
      <!-- class="example" --> 
      <p>The first line creates a <code>Text</code> object that cannot be edited, sets the text to <code>Welcome</code>, and assigns it to a variable named <code>scenetitle</code>. The next line uses the <code>setFont()</code> method to set the font family, weight, and size of the <code>scenetitle</code> variable. Using an inline style is appropriate where the style is bound to a variable, but a better technique for styling the elements of your user interface is by using a style sheet. In the next tutorial, <a href="css.htm#BABBGJBI">Fancy Forms with JavaFX CSS</a>, you will replace the inline style with a style sheet.</p> 
      <p>The <code>grid.add()</code> method adds the <code>scenetitle</code> variable to the layout <code>grid</code>. The numbering for columns and rows in the grid starts at zero, and <code>scenetitle</code> is added in column 0, row 0. The last two arguments of the <code>grid.add</code><code>()</code> method set the column span to 2 and the row span to 1.</p> 
      <p>The next lines create a <code>Label</code> object with text <code>User Name</code> at column 0, row 1 and a <code>Text Field</code> object that can be edited. The text field is added to the grid pane at column 1, row 1. A password field and label are created and added to the grid pane in a similar fashion.</p> 
      <p>When working with a grid pane, you can display the grid lines, which is useful for debugging purposes. In this case, you set the <code>gridLinesVisible</code> property to <code>true</code>. Then, when you run the application, you see the lines for the grid columns and rows as well as the gap properties, as shown in <a href="#BABFFDCJ">Figure 2-2</a>.</p> 
      <div class="figure">
       <a id="BABFFDCJ" name="BABFFDCJ"></a>
       <a id="JFXGS246" name="JFXGS246"></a> 
       <p class="titleinfigure">Figure 2-2 Login Form with Grid Lines</p> 
       <img src="img/login_gridlines_co.png" alt="Description of Figure 2-2 follows" title="Description of Figure 2-2 follows" longdesc="img_text/login_gridlines_co.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" -->
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXGS175" name="JFXGS175"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref12" name="sthref12"></a> 
      <h2 class="sect1">Add a Button and Text</h2> 
      <p>The final two controls required for the application are a <code>Button</code> control for submitting the data and a <code>Text</code> control for displaying a message when the user presses the button.</p> 
      <p>First, create the button and position it on the bottom right, which is a common placement for buttons that perform an action affecting the entire form. The code is in <a href="#CFHIJGHC">Example 2-4</a>. Add this code before the code for the scene.</p> 
      <div class="example">
       <a id="CFHIJGHC" name="CFHIJGHC"></a>
       <a id="JFXGS176" name="JFXGS176"></a> 
       <p class="titleinexample">Example 2-4 Button</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
Button btn = new Button(&quot;Sign in&quot;);
HBox hbBtn = new HBox(10);
hbBtn.setAlignment(Pos.BOTTOM_RIGHT);
hbBtn.getChildren().add(btn);
grid.add(hbBtn, 1, 4);
</pre>
      </div> 
      <!-- class="example" --> 
      <p>The first line creates a button named <code>btn</code> with the label <code>Sign in,</code> and the second line creates an <code>HBox</code> layout pane named <code>hbBtn</code> with spacing of <code>10</code> pixels. The <code>HBox</code> pane sets an alignment for the button that is different from the alignment applied to the other controls in the grid pane. The <code>alignment</code> property has a value of <code>Pos.BOTTOM_RIGHT</code>, which positions a node at the bottom of the space vertically and at the right edge of the space horizontally. The button is added as a child of the <code>HBox</code> pane, and the <code>HBox</code> pane is added to the grid in column 1, row 4.</p> 
      <p>Now, add a <code>Text</code> control for displaying the message, as shown in <a href="#BABHGHFI">Example 2-5</a>. Add this code before the code for the scene.</p> 
      <div class="example">
       <a id="BABHGHFI" name="BABHGHFI"></a>
       <a id="JFXGS177" name="JFXGS177"></a> 
       <p class="titleinexample">Example 2-5 Text</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
final Text actiontarget = new Text();
        grid.add(actiontarget, 1, 6);
</pre>
      </div> 
      <!-- class="example" --> 
      <p><a href="#BABFICHF">Figure 2-3</a> shows the form now. You will not see the text message until you work through the next section of the tutorial, <a href="#BABHABBF">Add Code to Handle an Event</a>.</p> 
      <div class="figure">
       <a id="BABFICHF" name="BABFICHF"></a>
       <a id="JFXGS247" name="JFXGS247"></a> 
       <p class="titleinfigure">Figure 2-3 Login Form with Button</p> 
       <img src="img/login.png" alt="Description of Figure 2-3 follows" title="Description of Figure 2-3 follows" longdesc="img_text/login.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" -->
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXGS179" name="JFXGS179"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="BABHABBF" name="BABHABBF"></a> 
      <h2 class="sect1">Add Code to Handle an Event</h2> 
      <p>Finally, make the button display the text message when the user presses it. Add the code in <a href="#CFHDCFFD">Example 2-6</a> before the code for the scene.</p> 
      <div class="example">
       <a id="CFHDCFFD" name="CFHDCFFD"></a>
       <a id="JFXGS180" name="JFXGS180"></a> 
       <p class="titleinexample">Example 2-6 Button Event</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
btn.setOnAction(new EventHandler&lt;ActionEvent&gt;() {
 
    @Override
    public void handle(ActionEvent e) {
        actiontarget.setFill(Color.FIREBRICK);
        actiontarget.setText(&quot;Sign in button pressed&quot;);
    }
});
</pre>
      </div> 
      <!-- class="example" --> 
      <p>The <code>setOnAction()</code> method is used to register an event handler that sets the <code>actiontarget</code> object to <code>Sign in button pressed</code> when the user presses the button. The color of the <code>actiontarget</code> object is set to firebrick red.</p> 
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXGS181" name="JFXGS181"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref14" name="sthref14"></a> 
      <h2 class="sect1">Run the Application</h2> 
      <p>Run the application and click the Sign in button. <a href="#BABIAIFI">Figure 2-4</a> shows the results. If you run into problems, then take a look at the code in the <a href="Login.java.html">Login.java</a> file</p> 
      <div class="figure">
       <a id="BABIAIFI" name="BABIAIFI"></a>
       <a id="JFXGS248" name="JFXGS248"></a> 
       <p class="titleinfigure">Figure 2-4 Final Login Form</p> 
       <img src="img/login_final.png" alt="Description of Figure 2-4 follows" title="Description of Figure 2-4 follows" longdesc="img_text/login_final.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" -->
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXGS183" name="JFXGS183"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref16" name="sthref16"></a> 
      <h2 class="sect1">Where to Go from Here</h2> 
      <p>This concludes the basic form tutorial, but you can continue reading the following tutorials on developing JavaFX applications.</p> 
      <ul> 
       <li> <p><a href="css.htm#BABBGJBI">Fancy Forms with JavaFX CSS</a> provides tips on how to add a background image and radically change the style of the text, label, and button in the login form.</p> </li> 
       <li> <p><a href="fxml_tutorial.htm#CIHHGHJJ">Using FXML to Create a User Interface</a> shows an alternate method for creating the login user interface. FXML is an XML-based language that provides the structure for building a user interface separate from the application logic of your code.</p> </li> 
       <li> <p><a href="../layout/jfxpub-layout.htm">Working With Layouts in JavaFX</a> explains the built-in JavaFX layout panes, and tips and tricks for using them.</p> </li> 
       <li> <p><a href="basic_deployment.htm#BABIDHGA">Deploying Your First JavaFX Application</a> provides information on how to run your application outside NetBeans IDE.</p> </li> 
      </ul> 
      <p>Also try out the JavaFX samples, which you can download from <code><a href="../../../../www.oracle.com/technetwork/java/javafx/downloads/index.html">http://www.oracle.com/technetwork/java/javafx/downloads/index.html</a></code>. The Ensemble sample contains examples of layouts and their source code.</p> 
     </div> 
     <!-- class="sect1" --> 
     <!-- /////////////// End content copied from DARB output ////////////// --> 
    </div> 
    <!-- Insert Sections Here! --> 
    <!-- Footer
      ================================================== --> 
    <footer class="footer"> 
     <!-- UY BEGIN --> 
     <div id="uyan_frame"></div> 
     <script type="text/javascript" id="UYScript" src="http://v1.uyan.cc/js/iframe.js?UYUserId=1529249" async=""></script> 
     <!-- UY END --> 
    </footer> 
   </div>
   <div class=" span3" style="padding-top: 110px;">
    <div class=" well">
     <ul class=" nav nav-list">
      <li class=" nav-header">本章目录</li>
      <li><a href="jfxpub-get_started.htm">About This Tutorial</a></li>
      <li><a href="hello_world.htm">Hello World, JavaFX Style</a></li>
      <li class=" active"><a href="form.htm">Creating a Form in JavaFX</a></li>
      <li><a href="css.htm">Fancy Forms with JavaFX CSS</a></li>
      <li><a href="fxml_tutorial.htm">Using FXML to Create a User Interface</a></li>
      <li><a href="animation.htm">Animation and Visual Effects in JavaFX</a></li>
      <li><a href="basic_deployment.htm">Deploying Your First JavaFX Application</a></li>
      <li class=" divider"></li>
      <li class=" nav-header">源码下载</li>
      <li><a href="http://download.oracle.com/javafx/2/get_started/Login.zip">Login.zip</a></li>
      <li><a href="http://download.oracle.com/javafx/2/get_started/LoginCSS.zip">LoginCSS.zip</a></li>
      <li><a href="http://download.oracle.com/javafx/2/get_started/FXMLExample.zip">FXMLExample.zip</a></li>
      <li><a href="http://download.oracle.com/javafx/2/get_started/ColorfulCircles.zip">ColorfulCircles.zip</a></li>
      <li class=" divider"></li>
      <li class=" nav-header">版本信息</li>
      <li>平台版本：JavaFX 2.1</li>
      <li>翻译编辑：(未翻译)</li>
      <li>最后更新：2012年7月28日</li>
     </ul>
    </div>
   </div>
   <!-- /container --> 
  </div> 
  <!-- JiaThis Button BEGIN --> 
  <script type="text/javascript">var jiathis_config = {data_track_clickback:true};</script> 
  <script type="text/javascript" src="http://v3.jiathis.com/code/jiathis_r.js?type=left&amp;move=0&amp;btn=l2.gif&amp;uid=1529249" charset="utf-8"></script> 
  <!-- JiaThis Button END --> 
  <!-- Le javascript
    ================================================== --> 
  <!-- Placed at the end of the document so the pages load faster --> 
  <script src="../../assets/js/jquery.min.js"></script> 
  <script src="../../assets/js/easing.js" type="text/javascript"></script> 
  <script src="../../assets/js/jquery.ui.totop.min.js" type="text/javascript"></script> 
  <script src="../../assets/js/google-code-prettify/prettify.js"></script> 
  <script type="text/javascript">
		$(document).ready(function() {
			/*
			var defaults = {
	  			containerID: 'toTop', // fading element id
				containerHoverID: 'toTopHover', // fading element hover id
				scrollSpeed: 1200,
				easingType: 'linear' 
	 		};
			*/
			$().UItoTop({ easingType: 'easeOutQuart' });
		});
	</script> 
  <script src="../../assets/js/bootstrap.min.js"></script> 
  <script src="../../assets/js/application.js"></script>   
 </body>
</html>