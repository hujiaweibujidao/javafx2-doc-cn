<!DOCTYPE html>
<html>
 <head> 
  <meta charset="utf-8" /> 
  <title>Application Execution Modes &middot; Deploying JavaFX Applications &middot; JavaFx 2 中文文档</title> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0" /> 
  <meta name="keywords" content="JavaFx JavaFx2 JavaFx文档 JavaFx2文档 JavaFx2中文文档 JavaFx中文文档" /> 
  <meta name="description" content="JavaFx 2 中文文档" /> 
  <meta name="author" content="" /> 
  <!-- Le styles --> 
  <link href="../../assets/css/bootstrap.css" rel="stylesheet" /> 
  <link href="../../assets/css/bootstrap-responsive.css" rel="stylesheet" /> 
  <link href="../../assets/css/docs.css" rel="stylesheet" /> 
  <link href="../../assets/js/google-code-prettify/prettify.css" rel="stylesheet" /> 
  <link media="screen,projection" href="../../assets/css/ui.totop.css" rel="stylesheet" /> 
  <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements --> 
  <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]--> 
  <!-- Le fav and touch icons --> 
  <link rel="shortcut icon" href="../../assets/ico/favicon.ico" /> 
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="../../assets/ico/apple-touch-icon-144-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="../../assets/ico/apple-touch-icon-114-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="../../assets/ico/apple-touch-icon-72-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" href="../../assets/ico/apple-touch-icon-57-precomposed.png" /> 
  <script src="../../assets/js/ga.js"></script> 
 </head> 
 <body data-spy="scroll" data-target=".subnav" data-offset="50"> 
  <!-- Navbar
    ================================================== --> 
  <div class="navbar navbar-fixed-top"> 
   <div class="navbar-inner"> 
    <div class="container"> 
     <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse"> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> 
     <a class="brand" href="../../index.html">JavaFx 2 中文文档</a> 
     <div class="nav-collapse collapse"> 
      <ul class="nav"> 
       <li class=""><a href="../../index.html"><i class="icon icon-home icon-white"></i> 首页</a></li> 
       <li class="divider-vertical"></li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">入门<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/overview/jfxpub-overview.htm">什么是JavaFx？</a></li> 
         <li><a href="../../2/get_started/jfxpub-get_started.htm">开始使用JavaFx</a></li> 
         <li><a href="../../2/fxml_get_started/jfxpub-fxml_get_started.htm">开始使用FXML</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">用户界面<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/layout/jfxpub-layout.htm">使用布局</a></li> 
         <li><a href="../../2/text/jfxpub-text.htm">添加文本</a></li> 
         <li><a href="../../2/ui_controls/jfxpub-ui_controls.htm">使用用户界面控件</a></li> 
         <li><a href="../../2/events/jfxpub-events.htm">处理事件</a></li> 
         <li><a href="../../2/charts/jfxpub-charts.htm">创建图表</a></li> 
         <li><a href="../../2/webview/jfxpub-webview.htm">添加HTML内容</a></li> 
         <li><a href="../../2/css_tutorial/jfxpub-css_tutorial.htm">使用CSS为应用程序设置皮肤</a></li> 
         <li><a href="../../2/drag_drop/jfxpub-drag_drop.htm">拖放数据</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">效果&middot;动画&middot;媒体<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/visual_effects/jfxpub-visual_effects.htm">创建视觉效果</a></li> 
         <li><a href="../../2/transformations/jfxpub-transformations.htm">添加二维和三维变形</a></li> 
         <li><a href="../../2/animations/jfxpub-animations.htm">添加过渡和动画</a></li> 
         <li><a href="../../2/media/jfxpub-media.htm">嵌入媒体</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">应用程序逻辑<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/architecture/jfxpub-architecture.htm">架构和框架</a></li> 
         <li><a href="../../2/scenegraph/jfxpub-scenegraph.htm">使用场景图</a></li> 
         <li><a href="../../2/binding/jfxpub-binding.htm">使用属性和绑定</a></li> 
         <li><a href="../../2/collections/jfxpub-collections.htm">使用集合</a></li> 
         <li><a href="../../2/threads/jfxpub-threads.htm">并发和线程</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">部署和更多<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/deployment/jfxpub-deployment.htm">打包和部署</a></li> 
         <li><a href="../../2/swing/jfxpub-swing.htm">在Swing中使用JavaFx</a></li> 
         <li><a href="../../2/swt_interoperability/jfxpub-swt_interoperability.htm">与SWT的互操作性</a></li> 
         <li><a href="../../2/doclet/jfxpub-doclet.htm">使用Doclet</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">参考<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="http://docs.oracle.com/javafx/2/api/index.html" target="_blank"><i class="icon-share icon"></i> API文档</a></li> 
         <li><a href="http://docs.oracle.com/javafx/2/api/javafx/scene/doc-files/cssref.html" target="_blank"><i class="icon-share icon"></i> CSS参考指南</a></li> 
         <li><a href="http://docs.oracle.com/javafx/2/api/javafx/fxml/doc-files/introduction_to_fxml.html" target="_blank"><i class="icon-share icon"></i> FXML简介</a></li> 
        </ul> </li> 
       <li class="divider-vertical"></li> 
       <li class=""><a href="../../more.html"><i class="icon icon-plus-sign icon-white"></i> 更多精彩</a></li> 
       <li class=""><a href="../../license.html"><i class="icon icon-book icon-white"></i> 许可说明</a></li> 
       <li class=""><a href="../../about.html"><i class="icon icon-user icon-white"></i> 关于我们</a></li> 
      </ul> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div class="row"> 
   <div id="container" class="container span9 offset1"> 
    <!-- Masthead
================================================== --> 
    <header class="jumbotron subhead" id="overview"> 
     <!-- Insert Header Here! --> 
     <h1>Deploying JavaFX Applications</h1>
     <p class=" lead">Application Execution Modes</p>
     <ul class=" pager">
      <li class=" previous"><a href="deploy_quick_start.htm">←上一篇</a></li>
      <li class=" next"><a href="deploy_user_experience.htm">下一篇→</a></li>
     </ul>
     <hr />
    </header>
    <div id="ind"> 
     <!-- /////////////// Start content copied from DARB output ////////////// --> 
     <a id="CEGHEAHD" name="CEGHEAHD"></a>
     <a id="JFXDP352" name="JFXDP352"></a>  
     <p>One of the main features of the JavaFX application model is that you can write one application and easily deploy it several different ways. The user can experience the same application running on the desktop, in a browser, or starting from a link in a web page.</p> 
     <p>However, different execution modes are not completely equivalent. There are some important differences to keep in mind while developing the application.</p> 
     <p>This page contains the following topics:</p> 
     <ul> 
      <li> <p><a href="#BABCGDJF">Section 2.1, &quot;Execution Modes&quot;</a></p> </li> 
      <li> <p><a href="#CEGDDIGC">Section 2.2, &quot;Understanding the Differences&quot;</a></p> </li> 
      <li> <p><a href="#CEGHEFIA">Section 2.3, &quot;Coding Tips&quot;</a></p> </li> 
     </ul> 
     <a id="BABCGDJF" name="BABCGDJF"></a>
     <a id="JFXDP353" name="JFXDP353"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" --> 
      <h2 class="sect1"><span class="secnum">2.1</span> Execution Modes</h2> 
      <p>One of the main features of the JavaFX application model is that the applications you develop can be deployed in several different ways, as described in <a href="#CEGJGHGB">Table 2-1</a>.</p> 
      <div class="tblhruleformal">
       <a id="JFXDP354" name="JFXDP354"></a>
       <a id="sthref3" name="sthref3"></a>
       <a id="CEGJGHGB" name="CEGJGHGB"></a> 
       <p class="titleintable">Table 2-1 JavaFX Deployment Types</p> 
       <table class="HRuleFormal table table-bordered table-striped" title="JavaFX Deployment Types" summary="Describes each type of JavaFX deployment and the advantages of each one." dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0"> 
        <colgroup>
         <col width="22%" /> 
         <col width="*" /> 
        </colgroup>
        <thead> 
         <tr align="left" valign="top"> 
          <th align="left" valign="bottom" id="r1c1-t2">Execution Mode</th> 
          <th align="left" valign="bottom" id="r1c2-t2">Description</th> 
         </tr> 
        </thead> 
        <tbody> 
         <tr align="left" valign="top"> 
          <td align="left" id="r2c1-t2" headers="r1c1-t2"> <p>Run as a standalone program</p> </td> 
          <td align="left" headers="r2c1-t2 r1c2-t2"> <p>The application package is available on a local drive. Users launch it using a Java launcher, such as <code>java -jar MyApp.jar</code>, or by double-clicking the application JAR file.</p> </td> 
         </tr> 
         <tr align="left" valign="top"> 
          <td align="left" id="r3c1-t2" headers="r1c1-t2"> <p>Launched from a remote server using Web Start</p> </td> 
          <td align="left" headers="r3c1-t2 r1c2-t2"> <p>Users click a link in a web page to start the application from a remote web server.</p> </td> 
         </tr> 
         <tr align="left" valign="top"> 
          <td align="left" id="r4c1-t2" headers="r1c1-t2"> <p>Embedded into a web page</p> </td> 
          <td align="left" headers="r4c1-t2 r1c2-t2"> <p>JavaFX content is embedded in the web page and hosted on a remote web server.</p> </td> 
         </tr> 
         <tr align="left" valign="top"> 
          <td align="left" id="r5c1-t2" headers="r1c1-t2"> <p>Launched from a desktop shortcut</p> </td> 
          <td align="left" headers="r5c1-t2 r1c2-t2"> <p>Users can create a desktop shortcut for a remote Web Start or embedded application to simplify its subsequent launch.</p> </td> 
         </tr> 
        </tbody> 
       </table> 
       <br />
      </div> 
      <!-- class="tblhruleformal" --> 
      <p>Each execution environment has its own specific complications and usability issues. For example, for remote applications the loading phase can be very long because the application has to be loaded from the network. This is less of an issue for applications that run on a local drive.</p> 
     </div> 
     <!-- class="sect1" --> 
     <a id="CEGDDIGC" name="CEGDDIGC"></a>
     <a id="JFXDP355" name="JFXDP355"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" --> 
      <h2 class="sect1"><span class="secnum">2.2</span> Understanding the Differences</h2> 
      <p><a href="#CEGBBAJB">Figure 2-1</a> lists some of the features that behave differently in different environments. The following sections describe the figure in more detail.</p> 
      <div class="figure">
       <a id="CEGBBAJB" name="CEGBBAJB"></a>
       <a id="JFXDP356" name="JFXDP356"></a> 
       <p class="titleinfigure">Figure 2-1 Features of Deployment Types</p> 
       <img src="img/deploy_type_properties.gif" alt="See graphic description link" title="See graphic description link" longdesc="img_text/deploy_type_properties.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" --> 
      <a id="JFXDP357" name="JFXDP357"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" -->
       <a id="sthref5" name="sthref5"></a> 
       <h3 class="sect2"><span class="secnum">2.2.1</span> Desktop Integration</h3> 
       <p>Web applications are initially launched from a web page, but after they are launched they can invite the user to create a desktop shortcut or add a link to the Windows Start menu to simplify subsequent launch.</p> 
       <p>This request is specified in the deployment descriptor and is not applicable to a standalone launch.</p> 
      </div> 
      <!-- class="sect2" --> 
      <a id="JFXDP358" name="JFXDP358"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" -->
       <a id="sthref6" name="sthref6"></a> 
       <h3 class="sect2"><span class="secnum">2.2.2</span> Auto-Updates</h3> 
       <p>JavaFX applications that run from a web page or were earlier installed from the web automatically check for availability of updates to the application at the original location where the application is loaded. This happens every time an application starts, and, by default, the update runs in the background. The application is automatically updated if updates are detected.</p> 
       <p>For standalone applications, you are responsible for handling updates.</p> 
      </div> 
      <!-- class="sect2" --> 
      <a id="CEGJGHDA" name="CEGJGHDA"></a>
      <a id="JFXDP359" name="JFXDP359"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" --> 
       <h3 class="sect2"><span class="secnum">2.2.3</span> Run in Sandbox Unless Signed</h3> 
       <p>Applications launched using Java Web Start or from the browser are, by default, run in a restricted environment, known as a sandbox. In this sandbox, Java Runtime does the following:</p> 
       <ul> 
        <li> <p>Protects users against malicious code that could affect local files.</p> </li> 
        <li> <p>Protects enterprises against code that could attempt to access or destroy data on networks.</p> </li> 
       </ul> 
       <p>Applications that are not signed with a security certificate are considered to be untrusted and are referred to as unsigned applications. When running on a client (unless launched as a standalone application), unsigned applications operate within a security sandbox that allows only a set of safe operations.</p> 
       <p>Unsigned applications cannot perform the following operations:</p> 
       <ul> 
        <li> <p>They cannot access client resources such as the local filesystem, executable files, system clipboard, and printers.</p> </li> 
        <li> <p>They cannot connect to or retrieve resources from any third-party server (in other words, any server other than the server it originated from).</p> </li> 
        <li> <p>They cannot load native libraries.</p> </li> 
        <li> <p>They cannot change the SecurityManager.</p> </li> 
        <li> <p>They cannot create a ClassLoader.</p> </li> 
        <li> <p>They cannot read certain system properties. See <a href="../../../../docs.oracle.com/javase/tutorial/deployment/doingMoreWithRIA/properties.html">System Properties</a> for a list of forbidden system properties.</p> </li> 
       </ul> 
      </div> 
      <!-- class="sect2" --> 
      <a id="JFXDP360" name="JFXDP360"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" -->
       <a id="sthref7" name="sthref7"></a> 
       <h3 class="sect2"><span class="secnum">2.2.4</span> Preloader Support</h3> 
       <p>The preloader is a small JavaFX application that receives notifications about application loading and initialization progress. The preloader is used with all execution modes, but depending on the execution mode, the preloader implementation receives a different set of events and optimal behavior may be different.</p> 
       <p>For example, in standalone execution mode or when launched from a shortcut, the preloader will not get any loading progress events, because there is nothing to load. See <a href="preloaders.htm#BABCDIHD">Preloaders</a> for information about preloader implementation and differences in behavior.</p> 
      </div> 
      <!-- class="sect2" --> 
      <a id="JFXDP361" name="JFXDP361"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" -->
       <a id="sthref8" name="sthref8"></a> 
       <h3 class="sect2"><span class="secnum">2.2.5</span> Deployment Toolkit</h3> 
       <p>The Deployment Toolkit performs two important functions:</p> 
       <ul> 
        <li> <p>It helps to simplify web deployment of JavaFX applications by managing updates.</p> </li> 
        <li> <p>It improves the end user experience while waiting for applications to start.</p> </li> 
       </ul> 
       <p>These two functions are intertwined, because the application startup phase is a critical component of user satisfaction. For example, the Deployment Toolkit verifies that the user has JavaFX Runtime installed, and if not, it will offer to install it before trying to run the application, without much effort on the user's part.</p> 
       <p>The Deployment Toolkit provides a JavaScript API and is only available for applications embedded in a web page or launched from a web page.</p> 
       <p>For more information about the Deployment Toolkit, see <a href="deployment_toolkit.htm#BABJHEJA">Deployment in the Browser</a>.</p> 
      </div> 
      <!-- class="sect2" --> 
      <a id="JFXDP362" name="JFXDP362"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" -->
       <a id="sthref9" name="sthref9"></a> 
       <h3 class="sect2"><span class="secnum">2.2.6</span> Communicate to the Host Web Page</h3> 
       <p>Applications embedded into a web page can communicate with it using JavaScript. To initiate communication, the application must get the web context from the JavaFX <code>HostServices</code> API. For any other execution environment, an attempt to get a reference to web context returns null.</p> 
       <p>See <a href="javafx_javascript.htm#BCEBDHIF">JavaFX and JavaScript</a> for information about using JavaScript to communicate with the browser.</p> 
      </div> 
      <!-- class="sect2" -->
     </div> 
     <!-- class="sect1" --> 
     <a id="CEGHEFIA" name="CEGHEFIA"></a>
     <a id="JFXDP363" name="JFXDP363"></a> 
     <div class="sect1"> 
      <h2 class="sect1"><span class="secnum">2.3</span> Coding Tips</h2> 
      <p>The following small programming tips work well in all environments and simplify the development and deployment of applications.</p> 
      <a id="JFXDP364" name="JFXDP364"></a> 
      <div class="sect2">
       <a id="sthref10" name="sthref10"></a> 
       <h3 class="sect2"><span class="secnum">2.3.1</span> Detecting Embedded Applications</h3> 
       <p>When an application is run in embedded mode, it gets staged with predefined dimensions and cannot update them directly. <a href="#CEGDBJDJ">Example 2-1</a> shows a very simple code snippet to detect if the application is embedded in the browser. The code can be used in either the main application or the preloader start method.</p> 
       <div class="example">
        <a id="CEGDBJDJ" name="CEGDBJDJ"></a>
        <a id="JFXDP365" name="JFXDP365"></a> 
        <p class="titleinexample">Example 2-1 Detect if the Application is Embedded in the Browser</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
public void start(Stage stage) {
    boolean isEmbedded = (stage.getWidth() &gt; 0);
    ...
}
</pre>
       </div> 
       <!-- class="example" --> 
       <p>As an alternative, you can try to get a reference to the web context from the <a href="../api/javafx/application/HostServices.html"><code>Application.getHostServices()</code></a> method. It will be null unless the applications is embedded.</p> 
      </div> 
      <!-- class="sect2" --> 
      <a id="JFXDP366" name="JFXDP366"></a> 
      <div class="sect2">
       <a id="sthref11" name="sthref11"></a> 
       <h3 class="sect2"><span class="secnum">2.3.2</span> Accessing Application Parameters</h3> 
       <p>JavaFX applications support both named and unnamed parameters that can be passed in a variety of ways:</p> 
       <ul> 
        <li> <p>They can be specified on the command line for a standalone launch.</p> </li> 
        <li> <p>They can be hardcoded in the application package (jar and deployment descriptor).</p> </li> 
        <li> <p>They can be passed from the HTML page in which the application is embedded.</p> </li> 
       </ul> 
       <p>To access parameters from a preloader or main application, use the <code>getParameters()</code> method. For example, the code in <a href="#CJAICAJD">Example 2-2</a> gets a list of all named parameters and their values:</p> 
       <div class="example">
        <a id="CJAICAJD" name="CJAICAJD"></a>
        <a id="JFXDP367" name="JFXDP367"></a> 
        <p class="titleinexample">Example 2-2 Get a List of Named Deployment Parameters and Values</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
Map m = getParameters().getNamed();
int cnt = 0;
String labelText = &quot;List of application parameters: \n&quot;;
for(String st: (Set&lt;String&gt;) m.keySet()) {
    labelText += &quot;  [&quot;+st+&quot;] : [&quot;+m.get(st)+&quot;]\n&quot;;
    cnt++;
}
</pre>
       </div> 
       <!-- class="example" -->
      </div> 
      <!-- class="sect2" --> 
      <a id="JFXDP368" name="JFXDP368"></a> 
      <div class="sect2">
       <a id="sthref12" name="sthref12"></a> 
       <h3 class="sect2"><span class="secnum">2.3.3</span> Consider the Use of Host Services</h3> 
       <p>The <a href="../api/javafx/application/HostServices.html"><code>Application.getHostServices()</code></a> method provides access to execution-mode-specific services, including:</p> 
       <ul> 
        <li> <p>Access to information about the code base and the document base.</p> <p>For example, for embedded applications this is the URL of the application and URL of the host web page, respectively.</p> </li> 
        <li> <p>Access to the host web page using the JavaScript engine, only available to embedded applications.</p> </li> 
        <li> <p>Ability to open a web page in the browser.</p> </li> 
       </ul> 
       <p><a href="#CEGEHACE">Example 2-3</a> shows a few things you can do with <code>getHostServices()</code>.</p> 
       <div class="example">
        <a id="CEGEHACE" name="CEGEHACE"></a>
        <a id="JFXDP369" name="JFXDP369"></a> 
        <p class="titleinexample">Example 2-3 Using getHostServices()</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
final HostServices services = getHostServices();
        
Button jsButton = new Button(&quot;Test Javascript&quot;);
jsButton.setOnAction(new EventHandler&lt;ActionEvent&gt;()  {
    public void handle(ActionEvent t) {
        JSObject js = services.getWebContext();
        js.eval(&quot;window.alert('Hello from JavaFX')&quot;);
    }            
});
 
Button openButton = new Button(&quot;Test openDocument()&quot;);
    openButton.setOnAction(new EventHandler&lt;ActionEvent&gt;() {
        public void handle(ActionEvent t) {
        services.showDocument(&quot;http://javafx.com/&quot;);
    }
});
</pre>
       </div> 
       <!-- class="example" -->
      </div> 
      <!-- class="sect2" --> 
      <a id="JFXDP370" name="JFXDP370"></a> 
      <div class="sect2">
       <a id="sthref13" name="sthref13"></a> 
       <h3 class="sect2"><span class="secnum">2.3.4</span> Loading Resources</h3> 
       <p>Using the <code>File</code> API and explicit relative references to external data files or resources may not work when the application is loaded from the web.</p> 
       <p>The best way to refer to resources relative to your application is to use the <code>getResource()</code> method on one of the application classes, as shown in <a href="#CJADHDIA">Example 2-4</a>.</p> 
       <div class="example">
        <a id="CJADHDIA" name="CJADHDIA"></a>
        <a id="JFXDP371" name="JFXDP371"></a> 
        <p class="titleinexample">Example 2-4 Use the getResource() Method to Load Resources</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
scene.getStylesheets().
    add(this.getClass().getResource(&quot;my.css&quot;).toExternalForm());
</pre>
       </div> 
       <!-- class="example" --> 
       <p>As an alternative, consider using <code>getCodeBase()</code> or <code>getDocumentBase()</code> from the <a href="../api/javafx/application/HostServices.html"><code>HostServices</code></a> class to refer to resources relative to the application or the location where the application is used.</p> 
      </div> 
      <!-- class="sect2" --> 
      <a id="JFXDP372" name="JFXDP372"></a> 
      <div class="sect2">
       <a id="sthref14" name="sthref14"></a> 
       <h3 class="sect2"><span class="secnum">2.3.5</span> Resize-Friendly Applications</h3> 
       <p>When an application is embedded into a web page, it cannot control stage dimensions. Dimensions you specify at packaging time are preferences only and can be overridden by the user, for example if the user has custom browser zoom settings. Moreover, the stage can be resized at runtime any time by the user.</p> 
       <p>To provide a good user experience, it is necessary to be prepared for arbitrary stage size. Otherwise, the application might be cropped, or there could be garbage painted in the unused area of the stage.</p> 
       <p>If your application uses layouts, then you do not need to do anything. Layouts take care of resizing for you. Otherwise, implement resizing logic and listen to stage dimension changes to update the application, as shown in the simplified code in <a href="#CEGFHGEB">Example 2-5</a>.</p> 
       <div class="example">
        <a id="CEGFHGEB" name="CEGFHGEB"></a>
        <a id="JFXDP373" name="JFXDP373"></a> 
        <p class="titleinexample">Example 2-5 Using Listeners to Resize an Embedded Application</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
public class ResizeFriendlyApp extends Application implements 
        ChangeListener&lt;Number&gt; {
    public void start(Stage stage) {
        //be resize friendly
        stage.widthProperty().addListener(this);
        stage.heightProperty().addListener(this);
 
        ...       
 
        //resize content
        resize(stage.getWidth(), stage.getHeight());
 
        stage.show(); 
    }
 
    private void resize(double width, double height) {
        //relayout the application to match given size
    }
 
    public void changed(ObservableValue&lt;? extends Number&gt; ov, 
            Number t, Number t1) {
        resize(stage.getWidth(), stage.getHeight());
    }
}
</pre>
       </div> 
       <!-- class="example" -->
      </div> 
      <!-- class="sect2" -->
     </div> 
     <!-- class="sect1" --> 
     <!-- /////////////// End content copied from DARB output ////////////// --> 
    </div> 
    <!-- Insert Sections Here! --> 
    <!-- Footer
      ================================================== --> 
    <footer class="footer"> 
     <!-- UY BEGIN --> 
     <div id="uyan_frame"></div> 
     <script type="text/javascript" id="UYScript" src="http://v1.uyan.cc/js/iframe.js?UYUserId=1529249" async=""></script> 
     <!-- UY END --> 
    </footer> 
   </div>
   <div class=" span3" style="padding-top: 110px;">
    <div class=" well">
     <ul class=" nav nav-list">
      <li class=" nav-header">本章目录</li>
      <li><a href="jfxpub-deployment.htm">About This Guide</a></li>
      <li><a href="deploy_quick_start.htm">Getting Started</a></li>
      <li class=" active"><a href="deploy_overview.htm">Application Execution Modes</a></li>
      <li><a href="deploy_user_experience.htm">Application Startup</a></li>
      <li><a href="packaging.htm">Packaging</a></li>
      <li><a href="deployment_toolkit.htm">Deployment in the Browser</a></li>
      <li><a href="javafx_javascript.htm">JavaFX and JavaScript</a></li>
      <li><a href="preloaders.htm">Preloaders</a></li>
      <li><a href="deploy_swing_apps.htm">JavaFX in Swing Applications</a></li>
      <li><a href="packager.htm">The JavaFX Packager Tool</a></li>
      <li><a href="packager001.htm">JavaFX Packager Command-Line Syntax</a></li>
      <li><a href="javafx_ant_task_reference.htm">JavaFX Ant Tasks</a></li>
      <li><a href="javafx_ant_task_reference001.htm">Reference: JavaFX Ant Tasks</a></li>
      <li><a href="javafx_ant_task_reference002.htm">Reference: JavaFX Ant Helper Parameters</a></li>
      <li><a href="troubleshooting.htm">Troubleshooting</a></li>
      <li class=" divider"></li>
      <li class=" nav-header">版本信息</li>
      <li>平台版本：JavaFX 2.1</li>
      <li>翻译编辑：(未翻译)</li>
      <li>最后更新：2012年7月28日</li>
     </ul>
    </div>
   </div>
   <!-- /container --> 
  </div> 
  <!-- JiaThis Button BEGIN --> 
  <script type="text/javascript">var jiathis_config = {data_track_clickback:true};</script> 
  <script type="text/javascript" src="http://v3.jiathis.com/code/jiathis_r.js?type=left&amp;move=0&amp;btn=l2.gif&amp;uid=1529249" charset="utf-8"></script> 
  <!-- JiaThis Button END --> 
  <!-- Le javascript
    ================================================== --> 
  <!-- Placed at the end of the document so the pages load faster --> 
  <script src="../../assets/js/jquery.min.js"></script> 
  <script src="../../assets/js/easing.js" type="text/javascript"></script> 
  <script src="../../assets/js/jquery.ui.totop.min.js" type="text/javascript"></script> 
  <script src="../../assets/js/google-code-prettify/prettify.js"></script> 
  <script type="text/javascript">
		$(document).ready(function() {
			/*
			var defaults = {
	  			containerID: 'toTop', // fading element id
				containerHoverID: 'toTopHover', // fading element hover id
				scrollSpeed: 1200,
				easingType: 'linear' 
	 		};
			*/
			$().UItoTop({ easingType: 'easeOutQuart' });
		});
	</script> 
  <script src="../../assets/js/bootstrap.min.js"></script> 
  <script src="../../assets/js/application.js"></script>   
 </body>
</html>