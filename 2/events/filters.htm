<!DOCTYPE html>
<html>
 <head> 
  <meta charset="utf-8" /> 
  <title>Working with Event Filters &middot; Handling JavaFX Events &middot; JavaFx 2 中文文档</title> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0" /> 
  <meta name="keywords" content="JavaFx JavaFx2 JavaFx文档 JavaFx2文档 JavaFx2中文文档 JavaFx中文文档" /> 
  <meta name="description" content="JavaFx 2 中文文档" /> 
  <meta name="author" content="" /> 
  <!-- Le styles --> 
  <link href="../../assets/css/bootstrap.css" rel="stylesheet" /> 
  <link href="../../assets/css/bootstrap-responsive.css" rel="stylesheet" /> 
  <link href="../../assets/css/docs.css" rel="stylesheet" /> 
  <link href="../../assets/js/google-code-prettify/prettify.css" rel="stylesheet" /> 
  <link media="screen,projection" href="../../assets/css/ui.totop.css" rel="stylesheet" /> 
  <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements --> 
  <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]--> 
  <!-- Le fav and touch icons --> 
  <link rel="shortcut icon" href="../../assets/ico/favicon.ico" /> 
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="../../assets/ico/apple-touch-icon-144-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="../../assets/ico/apple-touch-icon-114-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="../../assets/ico/apple-touch-icon-72-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" href="../../assets/ico/apple-touch-icon-57-precomposed.png" /> 
  <script src="../../assets/js/ga.js"></script> 
 </head> 
 <body data-spy="scroll" data-target=".subnav" data-offset="50"> 
  <!-- Navbar
    ================================================== --> 
  <div class="navbar navbar-fixed-top"> 
   <div class="navbar-inner"> 
    <div class="container"> 
     <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse"> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> 
     <a class="brand" href="../../index.html">JavaFx 2 中文文档</a> 
     <div class="nav-collapse collapse"> 
      <ul class="nav"> 
       <li class=""><a href="../../index.html"><i class="icon icon-home icon-white"></i> 首页</a></li> 
       <li class="divider-vertical"></li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">入门<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/overview/jfxpub-overview.htm">什么是JavaFx？</a></li> 
         <li><a href="../../2/get_started/jfxpub-get_started.htm">开始使用JavaFx</a></li> 
         <li><a href="../../2/fxml_get_started/jfxpub-fxml_get_started.htm">开始使用FXML</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">用户界面<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/layout/jfxpub-layout.htm">使用布局</a></li> 
         <li><a href="../../2/text/jfxpub-text.htm">添加文本</a></li> 
         <li><a href="../../2/ui_controls/jfxpub-ui_controls.htm">使用用户界面控件</a></li> 
         <li><a href="../../2/events/jfxpub-events.htm">处理事件</a></li> 
         <li><a href="../../2/charts/jfxpub-charts.htm">创建图表</a></li> 
         <li><a href="../../2/webview/jfxpub-webview.htm">添加HTML内容</a></li> 
         <li><a href="../../2/css_tutorial/jfxpub-css_tutorial.htm">使用CSS为应用程序设置皮肤</a></li> 
         <li><a href="../../2/drag_drop/jfxpub-drag_drop.htm">拖放数据</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">效果&middot;动画&middot;媒体<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/visual_effects/jfxpub-visual_effects.htm">创建视觉效果</a></li> 
         <li><a href="../../2/transformations/jfxpub-transformations.htm">添加二维和三维变形</a></li> 
         <li><a href="../../2/animations/jfxpub-animations.htm">添加过渡和动画</a></li> 
         <li><a href="../../2/media/jfxpub-media.htm">嵌入媒体</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">应用程序逻辑<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/architecture/jfxpub-architecture.htm">架构和框架</a></li> 
         <li><a href="../../2/scenegraph/jfxpub-scenegraph.htm">使用场景图</a></li> 
         <li><a href="../../2/binding/jfxpub-binding.htm">使用属性和绑定</a></li> 
         <li><a href="../../2/collections/jfxpub-collections.htm">使用集合</a></li> 
         <li><a href="../../2/threads/jfxpub-threads.htm">并发和线程</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">部署和更多<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/deployment/jfxpub-deployment.htm">打包和部署</a></li> 
         <li><a href="../../2/swing/jfxpub-swing.htm">在Swing中使用JavaFx</a></li> 
         <li><a href="../../2/swt_interoperability/jfxpub-swt_interoperability.htm">与SWT的互操作性</a></li> 
         <li><a href="../../2/doclet/jfxpub-doclet.htm">使用Doclet</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">参考<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="http://docs.oracle.com/javafx/2/api/index.html" target="_blank"><i class="icon-share icon"></i> API文档</a></li> 
         <li><a href="http://docs.oracle.com/javafx/2/api/javafx/scene/doc-files/cssref.html" target="_blank"><i class="icon-share icon"></i> CSS参考指南</a></li> 
         <li><a href="http://docs.oracle.com/javafx/2/api/javafx/fxml/doc-files/introduction_to_fxml.html" target="_blank"><i class="icon-share icon"></i> FXML简介</a></li> 
        </ul> </li> 
       <li class="divider-vertical"></li> 
       <li class=""><a href="../../more.html"><i class="icon icon-plus-sign icon-white"></i> 更多精彩</a></li> 
       <li class=""><a href="../../license.html"><i class="icon icon-book icon-white"></i> 许可说明</a></li> 
       <li class=""><a href="../../about.html"><i class="icon icon-user icon-white"></i> 关于我们</a></li> 
      </ul> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div class="row"> 
   <div id="container" class="container span9 offset1"> 
    <!-- Masthead
================================================== --> 
    <header class="jumbotron subhead" id="overview"> 
     <!-- Insert Header Here! --> 
     <h1>Handling JavaFX Events</h1>
     <p class=" lead">Working with Event Filters</p>
     <ul class=" pager">
      <li class=" previous"><a href="convenience_methods.htm">←上一篇</a></li>
      <li class=" next"><a href="handlers.htm">下一篇→</a></li>
     </ul>
     <hr />
    </header>
    <div id="ind"> 
     <!-- /////////////// Start content copied from DARB output ////////////// --> 
     <a id="BCFDCCEJ" name="BCFDCCEJ"></a>
     <a id="JFXEV137" name="JFXEV137"></a>  
     <a id="JFXEV138" name="JFXEV138"></a> 
     <p>This topic describes event filters in JavaFX applications. Learn how event filters can be used to process the events generated by keyboard actions, mouse actions, scroll actions, and other user interactions with your application.</p> 
     <p>Event filters enable you to handle an event during the event capturing phase of event processing. A node can have one or more filters for handling an event. A single filter can be used for more than one node and more than one event type. Event filters enable the parent node to provide common processing for its child nodes or to intercept an event and prevent child nodes from acting on the event.</p> 
     <a id="JFXEV139" name="JFXEV139"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref23" name="sthref23"></a> 
      <h2 class="sect1">Registering and Removing an Event Filter</h2> 
      <p>To process an event during the event capturing phase, a node must register an event filter. An event filter is an implementation of the <a href="../api/javafx/event/EventHandler.html"><code>EventHandler</code></a> interface. The <code>handle()</code> method of this interface provides the code that is executed when the event that is associated with the filter is received by the node that registered the filter.</p> 
      <p>To register a filter, use the <code>addEventFilter()</code> method. This method takes the event type and the filter as arguments. In <a href="#BCFHCCFC">Example 3-1</a>, the first filter is added to a single node and processes a specific event type. A second filter for handling input events is defined and registered by two different nodes. The same filter is also registered for two different types of events.</p> 
      <div class="example">
       <a id="BCFHCCFC" name="BCFHCCFC"></a>
       <a id="JFXEV140" name="JFXEV140"></a> 
       <p class="titleinexample">Example 3-1 Register a Filter</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
// Register an event filter for a single node and a specific event type
node.addEventFilter(MouseEvent.MOUSE_CLICKED, 
                    new EventHandler&lt;MouseEvent&gt;() {
                        public void handle(MouseEvent) { ... };
                    });

// Define an event filter
EventHandler filter = new EventHandler(&lt;InputEvent&gt;() {
    public void handle(InputEvent event) {
        System.out.println(&quot;Filtering out event &quot; + event.getEventType()); 
        event.consume();
    }

// Register the same filter for two different nodes
myNode1.addEventFilter(MouseEvent.MOUSE_PRESSED, filter);
myNode2.addEventFilter(MouseEvent.MOUSE_PRESSED, filter);

// Register the filter for another event type
myNode1.addEventFilter(KeyEvent.KEY_PRESSED, filter);
</pre>
      </div> 
      <!-- class="example" --> 
      <p>Note that an event filter that is defined for one type of event can also be used for any subtypes of that event. See <a href="processing.htm#CEGCHJDH">Event Types</a> for information on the hierarchy of event types.</p> 
      <p>When you no longer want an event filter to process events for a node or for an event type, remove the filter using the <code>removeEventFilter()</code> method. This method takes the event type and the filter as arguments. In <a href="#BCFGFJCG">Example 3-2</a>, the filter defined in <a href="#BCFHCCFC">Example 3-1</a> is removed from the <code>MouseEvent.MOUSE_PRESSED</code> event for <code>myNode1</code>. The filter is still executed by <code>myNode2</code> and by <code>myNode1</code> for the <code>KeyEvent.KEY_PRESSED</code> event.</p> 
      <div class="example">
       <a id="BCFGFJCG" name="BCFGFJCG"></a>
       <a id="JFXEV141" name="JFXEV141"></a> 
       <p class="titleinexample">Example 3-2 Remove a Filter</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
// Remove an event filter
myNode1.removeEventFilter(MouseEvent.MOUSE_PRESSED, filter);
</pre>
      </div> 
      <!-- class="example" -->
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXEV142" name="JFXEV142"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref24" name="sthref24"></a> 
      <h2 class="sect1">Using Event Filters</h2> 
      <p>Event filters are typically used on a branch node of the event dispatch chain and are called during the event capturing phase of event handling. Use a filter to perform actions such as overriding an event response or blocking an event from reaching its destination.</p> 
      <p>To see an example of how filters can be used, download the <code>DraggablePanelsExample.zip</code> file from the sidebar. Extract the NetBeans project and open it in the NetBeans IDE. The following sections describe the filters that are used by this example.</p> 
      <a id="JFXEV143" name="JFXEV143"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" -->
       <a id="sthref25" name="sthref25"></a> 
       <h3 class="sect2">Draggable Panels Example</h3> 
       <p>The Draggable Panels example demonstrates the following uses of filters:</p> 
       <ul> 
        <li> <p>Registering a filter for a super-type event to provide common handling for subtype events</p> </li> 
        <li> <p>Consuming an event to prevent a child node from acting on it</p> </li> 
       </ul> 
       <p><a href="#BCFHBECI">Figure 3-1</a> is the screen that is shown when the Draggable Panels example is started. The user interface consists of three panels. Each panel contains different UI controls. At the bottom of the screen is a check box that controls whether the panels can be dragged.</p> 
       <div class="figure">
        <a id="BCFHBECI" name="BCFHBECI"></a>
        <a id="JFXEV144" name="JFXEV144"></a> 
        <p class="titleinfigure">Figure 3-1 Initial Screen for the Draggable Panels Example</p> 
        <img src="img/initial_panels_screen.png" alt="Description of Figure 3-1 follows" title="Description of Figure 3-1 follows" longdesc="img_text/initial_panels_screen.htm" />
        <br /> 
        <br /> 
        <br />
       </div> 
       <!-- class="figure" --> 
       <p>If the check box is not selected, clicking any of the controls in the panels generates a response from the control. If the check box is selected, the individual controls do not respond to mouse clicks. Instead, clicking anywhere within a panel and dragging the mouse moves the entire panel, enabling you to change the position of the panels as shown in <a href="#BCFHHIEH">Figure 3-2</a>.</p> 
       <div class="figure">
        <a id="BCFHHIEH" name="BCFHHIEH"></a>
        <a id="JFXEV145" name="JFXEV145"></a> 
        <p class="titleinfigure">Figure 3-2 Screen with Repositioned Panels</p> 
        <img src="img/modified_panels_screen.png" alt="Description of Figure 3-2 follows" title="Description of Figure 3-2 follows" longdesc="img_text/modified_panels_screen.htm" />
        <br /> 
        <br /> 
        <br />
       </div> 
       <!-- class="figure" -->
      </div> 
      <!-- class="sect2" --> 
      <a id="JFXEV146" name="JFXEV146"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" -->
       <a id="sthref28" name="sthref28"></a> 
       <h3 class="sect2">Filters for the Draggable Panels Example</h3> 
       <p>In the Draggable Panels example, the <code>makeDraggable()</code> method is used in the creation of the three panels to make each panel movable. This method and the filter definitions are shown in <a href="#BCFFCAIH">Example 3-3</a>.</p> 
       <div class="example">
        <a id="BCFFCAIH" name="BCFFCAIH"></a>
        <a id="JFXEV147" name="JFXEV147"></a> 
        <p class="titleinexample">Example 3-3 Filter Definitions in makeDraggable()</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
private Node makeDraggable(final Node node) {
    final DragContext dragContext = new DragContext();
    final Group wrapGroup = new Group(node);
 
    wrapGroup.addEventFilter(
        MouseEvent.ANY,
        new EventHandler&lt;MouseEvent&gt;() {
            public void handle(final MouseEvent mouseEvent) {
                if (dragModeActiveProperty.get()) {
                    // disable mouse events for all children
                    mouseEvent.consume();
                }
             }
        });
 
    wrapGroup.addEventFilter(
        MouseEvent.MOUSE_PRESSED,
        new EventHandler&lt;MouseEvent&gt;() {
            public void handle(final MouseEvent mouseEvent) {
                if (dragModeActiveProperty.get()) {
                    // remember initial mouse cursor coordinates
                    // and node position
                    dragContext.mouseAnchorX = mouseEvent.getX();
                    dragContext.mouseAnchorY = mouseEvent.getY();
                    dragContext.initialTranslateX =
                        node.getTranslateX();
                    dragContext.initialTranslateY =
                        node.getTranslateY();
                }
            }
        });
 
    wrapGroup.addEventFilter(
        MouseEvent.MOUSE_DRAGGED,
        new EventHandler&lt;MouseEvent&gt;() {
            public void handle(final MouseEvent mouseEvent) {
                if (dragModeActiveProperty.get()) {
                    // shift node from its initial position by delta
                    // calculated from mouse cursor movement
                    node.setTranslateX(
                        dragContext.initialTranslateX
                            + mouseEvent.getX()
                            - dragContext.mouseAnchorX);
                    node.setTranslateY(
                        dragContext.initialTranslateY
                            + mouseEvent.getY()
                            - dragContext.mouseAnchorY);
                }
            }
        });
 
    return wrapGroup;

}
</pre>
       </div> 
       <!-- class="example" --> 
       <p>Filters for the following events are defined and registered for each panel:</p> 
       <ul> 
        <li> <p><code>MouseEvent.ANY</code>. This filter processes all mouse events for the panel. If the Drag Mode check box is selected, the filter consumes the event, and the child nodes, which are the UI controls within the panel, do not receive the event. If the check box is not selected, the control at the location of the mouse cursor processes the event.</p> </li> 
        <li> <p><code>MouseEvent.MOUSE_PRESSED</code>. This filter processes only mouse-pressed events for the panel. If the Drag Mode check box is selected, the current location of the mouse is stored.</p> </li> 
        <li> <p><code>MouseEvent.MOUSE_DRAGGED</code>. This filter processes only mouse-dragged events for the panel. If the Drag Mode check box is selected, the panel is moved.</p> </li> 
       </ul> 
       <p>Note that a panel has three registered filters. Filters for specific event types are invoked before super-type events, so the filters for <code>MouseEvent.MOUSE_PRESSED</code> and <code>MouseEvent.MOUSE_DRAGGED</code> are invoked before the filter for <code>MouseEvent.ANY</code>.</p> 
      </div> 
      <!-- class="sect2" -->
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXEV148" name="JFXEV148"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref29" name="sthref29"></a> 
      <h2 class="sect1">Additional Resources</h2> 
      <p>For information on event filters, see the <a href="../api/index.html">JavaFX API documentation</a>.</p> 
     </div> 
     <!-- class="sect1" --> 
     <!-- /////////////// End content copied from DARB output ////////////// --> 
    </div> 
    <!-- Insert Sections Here! --> 
    <!-- Footer
      ================================================== --> 
    <footer class="footer"> 
     <!-- UY BEGIN --> 
     <div id="uyan_frame"></div> 
     <script type="text/javascript" id="UYScript" src="http://v1.uyan.cc/js/iframe.js?UYUserId=1529249" async=""></script> 
     <!-- UY END --> 
    </footer> 
   </div>
   <div class=" span3" style="padding-top: 110px;">
    <div class=" well">
     <ul class=" nav nav-list">
      <li class=" nav-header">本章目录</li>
      <li><a href="jfxpub-events.htm">About This Tutorial</a></li>
      <li><a href="processing.htm">Processing Events</a></li>
      <li><a href="convenience_methods.htm">Working with Convenience Methods</a></li>
      <li class=" active"><a href="filters.htm">Working with Event Filters</a></li>
      <li><a href="handlers.htm">Working with Event Handlers</a></li>
      <li class=" divider"></li>
      <li class=" nav-header">源码下载</li>
      <li><a href="http://download.oracle.com/javafx/2/events/DraggablePanelsExample.zip">DraggablePanelsExample.zip</a></li>
      <li><a href="http://download.oracle.com/javafx/2/events/KeyboardExample.zip">KeyboardExample.zip</a></li>
      <li class=" divider"></li>
      <li class=" nav-header">版本信息</li>
      <li>平台版本：JavaFX 2.1</li>
      <li>翻译编辑：(未翻译)</li>
      <li>最后更新：2012年7月28日</li>
     </ul>
    </div>
   </div>
   <!-- /container --> 
  </div> 
  <!-- JiaThis Button BEGIN --> 
  <script type="text/javascript">var jiathis_config = {data_track_clickback:true};</script> 
  <script type="text/javascript" src="http://v3.jiathis.com/code/jiathis_r.js?type=left&amp;move=0&amp;btn=l2.gif&amp;uid=1529249" charset="utf-8"></script> 
  <!-- JiaThis Button END --> 
  <!-- Le javascript
    ================================================== --> 
  <!-- Placed at the end of the document so the pages load faster --> 
  <script src="../../assets/js/jquery.min.js"></script> 
  <script src="../../assets/js/easing.js" type="text/javascript"></script> 
  <script src="../../assets/js/jquery.ui.totop.min.js" type="text/javascript"></script> 
  <script src="../../assets/js/google-code-prettify/prettify.js"></script> 
  <script type="text/javascript">
		$(document).ready(function() {
			/*
			var defaults = {
	  			containerID: 'toTop', // fading element id
				containerHoverID: 'toTopHover', // fading element hover id
				scrollSpeed: 1200,
				easingType: 'linear' 
	 		};
			*/
			$().UItoTop({ easingType: 'easeOutQuart' });
		});
	</script> 
  <script src="../../assets/js/bootstrap.min.js"></script> 
  <script src="../../assets/js/application.js"></script>   
 </body>
</html>