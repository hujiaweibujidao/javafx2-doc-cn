<!DOCTYPE html>
<html>
 <head> 
  <meta charset="utf-8" /> 
  <title>Styling Layout Panes with CSS &middot; Working With Layouts in JavaFX &middot; JavaFx 2 中文文档</title> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0" /> 
  <meta name="keywords" content="JavaFx JavaFx2 JavaFx文档 JavaFx2文档 JavaFx2中文文档 JavaFx中文文档" /> 
  <meta name="description" content="JavaFx 2 中文文档" /> 
  <meta name="author" content="" /> 
  <!-- Le styles --> 
  <link href="../../assets/css/bootstrap.css" rel="stylesheet" /> 
  <link href="../../assets/css/bootstrap-responsive.css" rel="stylesheet" /> 
  <link href="../../assets/css/docs.css" rel="stylesheet" /> 
  <link href="../../assets/js/google-code-prettify/prettify.css" rel="stylesheet" /> 
  <link media="screen,projection" href="../../assets/css/ui.totop.css" rel="stylesheet" /> 
  <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements --> 
  <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]--> 
  <!-- Le fav and touch icons --> 
  <link rel="shortcut icon" href="../../assets/ico/favicon.ico" /> 
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="../../assets/ico/apple-touch-icon-144-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="../../assets/ico/apple-touch-icon-114-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="../../assets/ico/apple-touch-icon-72-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" href="../../assets/ico/apple-touch-icon-57-precomposed.png" /> 
  <script src="../../assets/js/ga.js"></script> 
 </head> 
 <body data-spy="scroll" data-target=".subnav" data-offset="50"> 
  <!-- Navbar
    ================================================== --> 
  <div class="navbar navbar-fixed-top"> 
   <div class="navbar-inner"> 
    <div class="container"> 
     <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse"> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> 
     <a class="brand" href="../../index.html">JavaFx 2 中文文档</a> 
     <div class="nav-collapse collapse"> 
      <ul class="nav"> 
       <li class=""><a href="../../index.html"><i class="icon icon-home icon-white"></i> 首页</a></li> 
       <li class="divider-vertical"></li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">入门<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/overview/jfxpub-overview.htm">什么是JavaFx？</a></li> 
         <li><a href="../../2/get_started/jfxpub-get_started.htm">开始使用JavaFx</a></li> 
         <li><a href="../../2/fxml_get_started/jfxpub-fxml_get_started.htm">开始使用FXML</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">用户界面<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/layout/jfxpub-layout.htm">使用布局</a></li> 
         <li><a href="../../2/text/jfxpub-text.htm">添加文本</a></li> 
         <li><a href="../../2/ui_controls/jfxpub-ui_controls.htm">使用用户界面控件</a></li> 
         <li><a href="../../2/events/jfxpub-events.htm">处理事件</a></li> 
         <li><a href="../../2/charts/jfxpub-charts.htm">创建图表</a></li> 
         <li><a href="../../2/webview/jfxpub-webview.htm">添加HTML内容</a></li> 
         <li><a href="../../2/css_tutorial/jfxpub-css_tutorial.htm">使用CSS为应用程序设置皮肤</a></li> 
         <li><a href="../../2/drag_drop/jfxpub-drag_drop.htm">拖放数据</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">效果&middot;动画&middot;媒体<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/visual_effects/jfxpub-visual_effects.htm">创建视觉效果</a></li> 
         <li><a href="../../2/transformations/jfxpub-transformations.htm">添加二维和三维变形</a></li> 
         <li><a href="../../2/animations/jfxpub-animations.htm">添加过渡和动画</a></li> 
         <li><a href="../../2/media/jfxpub-media.htm">嵌入媒体</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">应用程序逻辑<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/architecture/jfxpub-architecture.htm">架构和框架</a></li> 
         <li><a href="../../2/scenegraph/jfxpub-scenegraph.htm">使用场景图</a></li> 
         <li><a href="../../2/binding/jfxpub-binding.htm">使用属性和绑定</a></li> 
         <li><a href="../../2/collections/jfxpub-collections.htm">使用集合</a></li> 
         <li><a href="../../2/threads/jfxpub-threads.htm">并发和线程</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">部署和更多<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/deployment/jfxpub-deployment.htm">打包和部署</a></li> 
         <li><a href="../../2/swing/jfxpub-swing.htm">在Swing中使用JavaFx</a></li> 
         <li><a href="../../2/swt_interoperability/jfxpub-swt_interoperability.htm">与SWT的互操作性</a></li> 
         <li><a href="../../2/doclet/jfxpub-doclet.htm">使用Doclet</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">参考<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="http://docs.oracle.com/javafx/2/api/index.html" target="_blank"><i class="icon-share icon"></i> API文档</a></li> 
         <li><a href="http://docs.oracle.com/javafx/2/api/javafx/scene/doc-files/cssref.html" target="_blank"><i class="icon-share icon"></i> CSS参考指南</a></li> 
         <li><a href="http://docs.oracle.com/javafx/2/api/javafx/fxml/doc-files/introduction_to_fxml.html" target="_blank"><i class="icon-share icon"></i> FXML简介</a></li> 
        </ul> </li> 
       <li class="divider-vertical"></li> 
       <li class=""><a href="../../more.html"><i class="icon icon-plus-sign icon-white"></i> 更多精彩</a></li> 
       <li class=""><a href="../../license.html"><i class="icon icon-book icon-white"></i> 许可说明</a></li> 
       <li class=""><a href="../../about.html"><i class="icon icon-user icon-white"></i> 关于我们</a></li> 
      </ul> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div class="row"> 
   <div id="container" class="container span9 offset1"> 
    <!-- Masthead
================================================== --> 
    <header class="jumbotron subhead" id="overview"> 
     <!-- Insert Header Here! --> 
     <h1>Working With Layouts in JavaFX</h1>
     <p class=" lead">Styling Layout Panes with CSS</p>
     <ul class=" pager">
      <li class=" previous"><a href="size_align.htm">←上一篇</a></li>
     </ul>
     <hr />
    </header>
    <div id="ind"> 
     <!-- /////////////// Start content copied from DARB output ////////////// --> 
     <a id="CHDHIGCA" name="CHDHIGCA"></a>
     <a id="JFXLY161" name="JFXLY161"></a>  
     <p>Layout panes use properties such as padding, spacing, and alignment to manage elements of how the panes appear. Cascading style sheets (CSS) enable you to define a set of properties and assign them to multiple layout panes to provide a standard look to your JavaFX application. You can also use CSS to customize individual layout panes.</p> 
     <p>This topic uses the sample from <a href="builtin_layouts.htm#CHDGHCDG">Using Built-in Layout Panes</a> to provide examples of styling the different layout panes with CSS. <a href="#CHDGDEAA">Figure 3-1</a> shows the new look that is created.</p> 
     <div class="figure">
      <a id="CHDGDEAA" name="CHDGDEAA"></a>
      <a id="JFXLY162" name="JFXLY162"></a> 
      <p class="titleinfigure">Figure 3-1 Layout Sample with Custom Styling</p> 
      <img src="img/styled_final.png" alt="Description of Figure 3-1 follows" title="Description of Figure 3-1 follows" longdesc="img_text/styled_final.htm" />
      <br /> 
      <br /> 
      <br />
     </div> 
     <!-- class="figure" --> 
     <p>The <a href="LayoutSampleCSS.java.html">LayoutSampleCSS.java</a> file contains the source code for building this user interface. The <code><a href="LayoutSampleCSS.zip">LayoutSampleCSS.zip</a></code> file contains the NetBeans IDE project for the sample application.</p> 
     <a id="JFXLY163" name="JFXLY163"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref39" name="sthref39"></a> 
      <h2 class="sect1">Creating Style Definitions</h2> 
      <p>Unlike controls such as the button and check box, which have the respective style classes <code>.button</code> and <code>.check-box</code>, no style classes are predefined for the layout panes. To style your layout panes, you must create a style sheet and define the style classes that you want. Then in the code for your application, assign the appropriate style class to layout panes as you create them.</p> 
      <p>For example, if you want all of your <code>HBox</code> panes to have the same background color, padding, and spacing properties, create a style named <code>.hbox</code> as shown in <a href="#CHDIIEDC">Example 3-1</a>.</p> 
      <div class="example">
       <a id="CHDIIEDC" name="CHDIIEDC"></a>
       <a id="JFXLY164" name="JFXLY164"></a> 
       <p class="titleinexample">Example 3-1 Sample Style for an HBox Pane</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
.hbox {
    -fx-background-color: #2f4f4f;
    -fx-padding: 15;
    -fx-spacing: 10;
}
 
</pre>
      </div> 
      <!-- class="example" --> 
      <p>Use this style for each <code>HBox</code> pane that you create by assigning the style class to the pane. <a href="#CHDCEEHB">Example 3-2</a> shows the style assigned to two panes.</p> 
      <div class="example">
       <a id="CHDCEEHB" name="CHDCEEHB"></a>
       <a id="JFXLY165" name="JFXLY165"></a> 
       <p class="titleinexample">Example 3-2 Assigning the Style to HBox Panes</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
HBox hbox = new HBox();
hbox.getStyleClass().add(&quot;hbox&quot;);

HBox hb = new HBox();
hb.getStyleClass().add(&quot;hbox&quot;);
</pre>
      </div> 
      <!-- class="example" --> 
      <a id="JFXLY166" name="JFXLY166"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" -->
       <a id="sthref40" name="sthref40"></a> 
       <h3 class="sect2">Style Properties for Layout Panes</h3> 
       <p>You can use CSS to set the background, border, and padding properties for all types of layout panes. Some types of layout panes have additional properties that can be set. For example, you can set the spacing and alignment properties for <code>HBox</code> and <code>VBox</code> panes, and you can set the orientation, preferred number of rows, preferred number of columns, and other properties for tile panes. Images can be used for the background and border of a pane.</p> 
       <p>See the <a href="../api/javafx/scene/doc-files/cssref.html">JavaFX CSS Reference Guide</a> for a list of the properties that are available for each type of layout pane. Properties listed for the <code>Region</code> class can be used by all layout panes, which are descendents of the <code>Region</code> class.</p> 
      </div> 
      <!-- class="sect2" --> 
      <a id="JFXLY167" name="JFXLY167"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" -->
       <a id="sthref41" name="sthref41"></a> 
       <h3 class="sect2">Assigning a Style Sheet to the Scene</h3> 
       <p>After you have your style sheet prepared, you must add the style sheet to the scene for your application. All nodes then have access to the styles defined in the style sheet. <a href="#CHDEFIED">Example 3-3</a> shows how to add the style sheet for the Layout Sample. In this sample, the style sheet is in the same directory as the class file for the application.</p> 
       <div class="example">
        <a id="CHDEFIED" name="CHDEFIED"></a>
        <a id="JFXLY168" name="JFXLY168"></a> 
        <p class="titleinexample">Example 3-3 Adding a Style Sheet</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
Scene scene = new Scene(border,585,415);
scene.getStylesheets().add(&quot;layoutsamplecss/layoutstyles.css&quot;);
</pre>
       </div> 
       <!-- class="example" -->
      </div> 
      <!-- class="sect2" -->
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXLY169" name="JFXLY169"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref42" name="sthref42"></a> 
      <h2 class="sect1">Styling the Layout Sample</h2> 
      <p>The Layout Sample has examples of the built-in layout panes that are provided by the JavaFX layout package. Styling this sample provides examples of how CSS can be used with the different layout panes.</p> 
      <p>The style sheet <a href="layoutstyles.css.html">layoutstyles.css</a> contains the styles used for <a href="#CHDGDEAA">Figure 3-1</a>.</p> 
      <a id="CHDJDJIC" name="CHDJDJIC"></a>
      <a id="JFXLY170" name="JFXLY170"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" --> 
       <h3 class="sect2">Defining a Style for Shared Properties</h3> 
       <p>All layout panes have a set of basic properties that can be managed with CSS. These include properties for the background, border, padding, and shape of the pane. If you have several panes that share common styling for these properties, you can define a single style class and assign that class to each of the panes.</p> 
       <p>In the customized Layout Sample, several of the layout panes use the same background color. The <code>.pane</code> style class shown in <a href="#CHDJBHFJ">Example 3-4</a> is used to set this color.</p> 
       <div class="example">
        <a id="CHDJBHFJ" name="CHDJBHFJ"></a>
        <a id="JFXLY171" name="JFXLY171"></a> 
        <p class="titleinexample">Example 3-4 .pane Style Class</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
.pane {
    -fx-background-color: #8fbc8f;
}
</pre>
       </div> 
       <!-- class="example" --> 
       <p>If setting the background color is all that is needed for a pane, then only the <code>.pane</code> style needs to be assigned. If additional styling is desired, more than one style can be assigned to a pane. <a href="#CHDIGEBG">Example 3-5</a> shows just the <code>.pane</code> style added to an anchor pane and the <code>.pane</code> and <code>.grid</code> styles added to a grid pane.</p> 
       <div class="example">
        <a id="CHDIGEBG" name="CHDIGEBG"></a>
        <a id="JFXLY172" name="JFXLY172"></a> 
        <p class="titleinexample">Example 3-5 Assigning the .pane Style to a Layout Pane</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
AnchorPane anchorpane = new AnchorPane();
anchorpane.getStyleClass().add(&quot;pane&quot;);

GridPane grid = new GridPane();
grid.getStyleClass().addAll(&quot;pane&quot;,&quot;grid&quot;);
</pre>
       </div> 
       <!-- class="example" -->
      </div> 
      <!-- class="sect2" --> 
      <a id="JFXLY173" name="JFXLY173"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" -->
       <a id="sthref43" name="sthref43"></a> 
       <h3 class="sect2">Styling the Border Pane</h3> 
       <p>Border panes do not have any additional properties beyond the basic set mentioned in <a href="#CHDJDJIC">Defining a Style for Shared Properties</a>. In the Layout Sample, the border pane is not styled. However, to style a border pane, define a style class and assign it to the pane in the same way that is done for other panes.</p> 
      </div> 
      <!-- class="sect2" --> 
      <a id="JFXLY174" name="JFXLY174"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" -->
       <a id="sthref44" name="sthref44"></a> 
       <h3 class="sect2">Styling the HBox Panes</h3> 
       <p>In addition to the basic set of properties for all layout panes, <code>HBox</code> panes have properties for alignment, spacing, and fill height.</p> 
       <p>The Layout Sample shown in <a href="#CHDGDEAA">Figure 3-1</a> contains two <code>HBox</code> panes. The first <code>HBox</code> pane is at the top and contains the Current and Projected buttons. The second <code>HBox</code> pane is near the bottom and contains the Save and Cancel buttons.</p> 
       <p>For the customized Layout Sample, both <code>HBox</code> panes have the same background color and spacing. These properties are set in the style definition shown in <a href="#CHDIIEDC">Example 3-1</a>.</p> 
       <p>The second <code>HBox</code>, which contains the Save and Cancel buttons, also has rounded corners and less padding as shown in <a href="#CHDFJBJF">Figure 3-2</a>.</p> 
       <div class="figure">
        <a id="CHDFJBJF" name="CHDFJBJF"></a>
        <a id="JFXLY175" name="JFXLY175"></a> 
        <p class="titleinfigure">Figure 3-2 Styled HBox Pane</p> 
        <img src="img/styled_hbox.png" alt="Description of Figure 3-2 follows" title="Description of Figure 3-2 follows" longdesc="img_text/styled_hbox.htm" />
        <br /> 
        <br /> 
        <br />
       </div> 
       <!-- class="figure" --> 
       <p>To use the defined styling for <code>HBox</code> panes, the <code>.hbox</code> style is assigned to the pane. To override the padding and set the additional property for rounding the corners, the style definition shown in <a href="#CHDGFDFD">Example 3-6</a> is used and an ID is set for the second <code>HBox</code> pane.</p> 
       <div class="example">
        <a id="CHDGFDFD" name="CHDGFDFD"></a>
        <a id="JFXLY176" name="JFXLY176"></a> 
        <p class="titleinexample">Example 3-6 Custom HBox Style</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
#hbox-custom {
    -fx-background-radius: 5.0; 
    -fx-padding: 8;
}
</pre>
       </div> 
       <!-- class="example" --> 
       <p><a href="#CHDCIIFD">Example 3-7</a> shows how the styles are assigned to the second <code>HBox</code> pane.</p> 
       <div class="example">
        <a id="CHDCIIFD" name="CHDCIIFD"></a>
        <a id="JFXLY177" name="JFXLY177"></a> 
        <p class="titleinexample">Example 3-7 Assigning the Custom HBox Style to a Pane</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
HBox hb = new HBox();
hb.getStyleClass().add(&quot;hbox&quot;);
hb.setId(&quot;hbox-custom&quot;);
</pre>
       </div> 
       <!-- class="example" -->
      </div> 
      <!-- class="sect2" --> 
      <a id="JFXLY178" name="JFXLY178"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" -->
       <a id="sthref46" name="sthref46"></a> 
       <h3 class="sect2">Styling the VBox Pane</h3> 
       <p>In addition to the basic set of properties for all layout panes, <code>VBox</code> panes have properties for alignment, spacing, and fill width.</p> 
       <p>The <code>VBox</code> pane in the left region of <a href="#CHDGDEAA">Figure 3-1</a> uses the background from the <code>.pane</code> style class. The border, padding, and spacing are set in the <code>.vbox</code> style class shown in <a href="#CHDGIHDH">Example 3-8</a>.</p> 
       <div class="example">
        <a id="CHDGIHDH" name="CHDGIHDH"></a>
        <a id="JFXLY179" name="JFXLY179"></a> 
        <p class="titleinexample">Example 3-8 .vbox Style Class</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
.vbox {
    -fx-border-color: #2e8b57;
    -fx-border-width: 2px;
    -fx-padding: 10;
    -fx-spacing: 8;
}
</pre>
       </div> 
       <!-- class="example" --> 
       <p><a href="#CHDGEEJJ">Example 3-9</a> shows how the styles are assigned to the <code>VBox</code> pane.</p> 
       <div class="example">
        <a id="CHDGEEJJ" name="CHDGEEJJ"></a>
        <a id="JFXLY180" name="JFXLY180"></a> 
        <p class="titleinexample">Example 3-9 Assigning Styles to the VBox Pane</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
VBox vbox = new VBox();
vbox.getStyleClass().addAll(&quot;pane&quot;, &quot;vbox&quot;);
</pre>
       </div> 
       <!-- class="example" -->
      </div> 
      <!-- class="sect2" --> 
      <a id="JFXLY181" name="JFXLY181"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" -->
       <a id="sthref47" name="sthref47"></a> 
       <h3 class="sect2">Styling the Stack Pane</h3> 
       <p>In addition to the basic set of properties for all layout panes, stack panes have a property for alignment. In the Layout Sample, the stack pane is not styled. However, to style a stack pane, define a style class and assign it to the pane in the same way that is done for other panes.</p> 
      </div> 
      <!-- class="sect2" --> 
      <a id="JFXLY182" name="JFXLY182"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" -->
       <a id="sthref48" name="sthref48"></a> 
       <h3 class="sect2">Styling the Grid Pane</h3> 
       <p>In addition to the basic set of properties for all layout panes, grid panes have properties for spacing between the rows and columns, alignment of the grid, and visibility of the grid lines.</p> 
       <p>The grid in the center region of <a href="#CHDGDEAA">Figure 3-1</a> has rounded corners and a white background that is slightly smaller than the grid itself. The <code>.grid</code> style class shown in <a href="#CHDJIFJB">Example 3-10</a> provides this styling and sets the properties for padding and for spacing between the rows and columns.</p> 
       <div class="example">
        <a id="CHDJIFJB" name="CHDJIFJB"></a>
        <a id="JFXLY183" name="JFXLY183"></a> 
        <p class="titleinexample">Example 3-10 .grid Style Class</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
.grid {
    -fx-background-color: white;
    -fx-background-radius: 5.0;
    -fx-background-insets: 0.0 5.0 0.0 5.0;
    -fx-padding: 10;
    -fx-hgap: 10;
    -fx-vgap: 10;
}
</pre>
       </div> 
       <!-- class="example" --> 
       <p><a href="#CHDCEIJA">Example 3-11</a> shows how the style is assigned to the grid.</p> 
       <div class="example">
        <a id="CHDCEIJA" name="CHDCEIJA"></a>
        <a id="JFXLY184" name="JFXLY184"></a> 
        <p class="titleinexample">Example 3-11 Assigning a Style to the Grid</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
GridPane grid = new GridPane();
grid.getStyleClass().add(&quot;grid&quot;);
</pre>
       </div> 
       <!-- class="example" --> 
       <p>Note that the grid does not have the background color that is used by other layout panes in the sample. However, the anchor pane that contains the grid uses the background color. To prevent the grid from having the background color of its parent, you must to set the background for the grid to the desired color.</p> 
      </div> 
      <!-- class="sect2" --> 
      <a id="JFXLY185" name="JFXLY185"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" -->
       <a id="sthref49" name="sthref49"></a> 
       <h3 class="sect2">Styling the Flow Pane or Tile Pane</h3> 
       <p>In addition to the basic set of properties for all layout panes, flow panes have properties for alignment, orientation, and spacing between the rows and columns. Tile panes have properties for alignment, orientation, spacing between the rows and columns, preferred number of rows and columns, and preferred width and height.</p> 
       <p>In the Layout Sample, either a flow pane or a tile pane can be used for the right region of <a href="#CHDGDEAA">Figure 3-1</a>. The properties set in the style class are common to both types of panes, so the same style class is used in the sample. The <code>.flow-tile</code> style class shown in <a href="#CHDCGHFA">Example 3-12</a> sets the properties for padding and for spacing between the rows and columns.</p> 
       <div class="example">
        <a id="CHDCGHFA" name="CHDCGHFA"></a>
        <a id="JFXLY186" name="JFXLY186"></a> 
        <p class="titleinexample">Example 3-12 .flow-tile Style Class</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
.flow-tile {
    -fx-padding: 10.0 3.0 5.0 0.0;
    -fx-hgap: 4;
    -fx-vgap: 4;
}
</pre>
       </div> 
       <!-- class="example" --> 
       <p>The flow pane and tile pane also use the <code>.pane</code> style class for the background color. <a href="#CHDCBCJF">Example 3-13</a> shows how the styles are assigned to the flow pane and tile pane.</p> 
       <div class="example">
        <a id="CHDCBCJF" name="CHDCBCJF"></a>
        <a id="JFXLY187" name="JFXLY187"></a> 
        <p class="titleinexample">Example 3-13 Assigning Styles to the Flow Pane and Tile Pane</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
FlowPane flow = new FlowPane();
flow.getStyleClass().addAll(&quot;pane&quot;, &quot;flow-tile&quot;);

TilePane tile = new TilePane();
tile.getStyleClass().addAll(&quot;pane&quot;, &quot;flow-tile&quot;);
</pre>
       </div> 
       <!-- class="example" -->
      </div> 
      <!-- class="sect2" --> 
      <a id="JFXLY188" name="JFXLY188"></a> 
      <div class="sect2">
       <!-- infolevel="all" infotype="General" -->
       <a id="sthref50" name="sthref50"></a> 
       <h3 class="sect2">Styling the Anchor Pane</h3> 
       <p>Anchor panes do not have any additional properties beyond the basic set of properties for all layout panes.</p> 
       <p>The anchor pane in the center region of <a href="#CHDGDEAA">Figure 3-1</a> contains a grid and an <code>HBox</code> pane, each of which has its own styling. The only styling applied to the anchor pane is the background color set by the <code>.pane</code> style class shown in <a href="#CHDJBHFJ">Example 3-4</a>.</p> 
       <p><a href="#CHDDEBED">Example 3-14</a> shows how the style is assigned to the anchor pane.</p> 
       <div class="example">
        <a id="CHDDEBED" name="CHDDEBED"></a>
        <a id="JFXLY189" name="JFXLY189"></a> 
        <p class="titleinexample">Example 3-14 Assigning a Style to the Anchor Pane</p> 
        <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
AnchorPane anchorpane = new AnchorPane();
anchorpane.getStyleClass().add(&quot;pane&quot;);
</pre>
       </div> 
       <!-- class="example" -->
      </div> 
      <!-- class="sect2" -->
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXLY190" name="JFXLY190"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref51" name="sthref51"></a> 
      <h2 class="sect1">Using a Background Image</h2> 
      <p>Images can be used as the background for a layout pane by setting the background image properties. You can specify the image, size, position, and repetition in a style class. <a href="#CHDIHBFG">Figure 3-3</a> shows another version of the Layout Sample user interface that uses background images for the <code>VBox</code> pane on the left and the <code>HBox</code> pane that contains the Save and Cancel buttons.</p> 
      <div class="figure">
       <a id="CHDIHBFG" name="CHDIHBFG"></a>
       <a id="JFXLY191" name="JFXLY191"></a> 
       <p class="titleinfigure">Figure 3-3 Styled with Images</p> 
       <img src="img/styled_with_images.png" alt="Description of Figure 3-3 follows" title="Description of Figure 3-3 follows" longdesc="img_text/styled_with_images.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" --> 
      <p><a href="#CHDHAFAF">Example 3-15</a> shows the style class definitions for adding the background images.</p> 
      <div class="example">
       <a id="CHDHAFAF" name="CHDHAFAF"></a>
       <a id="JFXLY192" name="JFXLY192"></a> 
       <p class="titleinexample">Example 3-15 Styles Using Background Images</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
.vbox {
    -fx-background-image: url(&quot;graphics/arrow_t_up_right.png&quot;);
    -fx-background-size: 96, 205;
    -fx-background-repeat: no-repeat;
    -fx-border-color: #2e8b57;
    -fx-border-width: 2px;
    -fx-padding: 10;
    -fx-spacing: 8;
}

#hbox-custom {
    -fx-background-image: url(&quot;graphics/cloud.png&quot;);
    -fx-background-size: 60,69;
    -fx-padding: 18 3 18 6;
    -fx-background-radius: 5.0; 
}

#button-custom {
    -fx-rotate: 45;
    -fx-text-alignment: center;
}
</pre>
      </div> 
      <!-- class="example" --> 
      <p>Note the following:</p> 
      <ul> 
       <li> <p>The images are located in the /graphics directory, which is at the same level as the class file for the application.</p> </li> 
       <li> <p>The arrow image was smaller than desired and the cloud image was larger than desired, so the images were resized using the <code>-fx-background-size</code> property.</p> </li> 
       <li> <p>To prevent the arrow from repeating in the background of the <code>VBox</code> pane, the <code>-fx-background-repeat</code> property is set to <code>no-repeat</code>.</p> </li> 
       <li> <p>To angle the buttons, a new style class named <code>#button-custom</code> is defined, and the ID for the Save and Cancel buttons is set to <code>button-custom</code>.</p> </li> 
      </ul> 
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXLY193" name="JFXLY193"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref53" name="sthref53"></a> 
      <h2 class="sect1">Additional Resources</h2> 
      <p>For more information on CSS and JavaFX, see the following documents:</p> 
      <ul> 
       <li> <p><a href="../api/javafx/scene/doc-files/cssref.html">JavaFX CSS Reference Guide</a></p> </li> 
       <li> <p><a href="../css_tutorial/jfxpub-css_tutorial.htm">Skinning JavaFX Applications with CSS</a></p> </li> 
      </ul> 
     </div> 
     <!-- class="sect1" --> 
     <!-- /////////////// End content copied from DARB output ////////////// --> 
    </div> 
    <!-- Insert Sections Here! --> 
    <!-- Footer
      ================================================== --> 
    <footer class="footer"> 
     <!-- UY BEGIN --> 
     <div id="uyan_frame"></div> 
     <script type="text/javascript" id="UYScript" src="http://v1.uyan.cc/js/iframe.js?UYUserId=1529249" async=""></script> 
     <!-- UY END --> 
    </footer> 
   </div>
   <div class=" span3" style="padding-top: 110px;">
    <div class=" well">
     <ul class=" nav nav-list">
      <li class=" nav-header">本章目录</li>
      <li><a href="jfxpub-layout.htm">About This Tutorial</a></li>
      <li><a href="builtin_layouts.htm">Using Built-in Layout Panes</a></li>
      <li><a href="size_align.htm">Tips for Sizing and Aligning Nodes</a></li>
      <li class=" active"><a href="style_css.htm">Styling Layout Panes with CSS</a></li>
      <li class=" divider"></li>
      <li class=" nav-header">源码下载</li>
      <li><a href="http://download.oracle.com/javafx/2/layout/LayoutSample.zip">LayoutSample.zip</a></li>
      <li><a href="http://download.oracle.com/javafx/2/layout/LayoutSizingAligning.zip">LayoutSizingAligning.zip</a></li>
      <li><a href="http://download.oracle.com/javafx/2/layout/LayoutSampleCSS.zip">LayoutSampleCSS.zip</a></li>
      <li class=" divider"></li>
      <li class=" nav-header">版本信息</li>
      <li>平台版本：JavaFX 2.1</li>
      <li>翻译编辑：(未翻译)</li>
      <li>最后更新：2012年7月28日</li>
     </ul>
    </div>
   </div>
   <!-- /container --> 
  </div> 
  <!-- JiaThis Button BEGIN --> 
  <script type="text/javascript">var jiathis_config = {data_track_clickback:true};</script> 
  <script type="text/javascript" src="http://v3.jiathis.com/code/jiathis_r.js?type=left&amp;move=0&amp;btn=l2.gif&amp;uid=1529249" charset="utf-8"></script> 
  <!-- JiaThis Button END --> 
  <!-- Le javascript
    ================================================== --> 
  <!-- Placed at the end of the document so the pages load faster --> 
  <script src="../../assets/js/jquery.min.js"></script> 
  <script src="../../assets/js/easing.js" type="text/javascript"></script> 
  <script src="../../assets/js/jquery.ui.totop.min.js" type="text/javascript"></script> 
  <script src="../../assets/js/google-code-prettify/prettify.js"></script> 
  <script type="text/javascript">
		$(document).ready(function() {
			/*
			var defaults = {
	  			containerID: 'toTop', // fading element id
				containerHoverID: 'toTopHover', // fading element hover id
				scrollSpeed: 1200,
				easingType: 'linear' 
	 		};
			*/
			$().UItoTop({ easingType: 'easeOutQuart' });
		});
	</script> 
  <script src="../../assets/js/bootstrap.min.js"></script> 
  <script src="../../assets/js/application.js"></script>   
 </body>
</html>