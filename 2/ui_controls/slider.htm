<!DOCTYPE html>
<html>
 <head> 
  <meta charset="utf-8" /> 
  <title>Slider &middot; Using JavaFX UI Controls &middot; JavaFx 2 中文文档</title> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0" /> 
  <meta name="keywords" content="JavaFx JavaFx2 JavaFx文档 JavaFx2文档 JavaFx2中文文档 JavaFx中文文档" /> 
  <meta name="description" content="JavaFx 2 中文文档" /> 
  <meta name="author" content="" /> 
  <!-- Le styles --> 
  <link href="../../assets/css/bootstrap.css" rel="stylesheet" /> 
  <link href="../../assets/css/bootstrap-responsive.css" rel="stylesheet" /> 
  <link href="../../assets/css/docs.css" rel="stylesheet" /> 
  <link href="../../assets/js/google-code-prettify/prettify.css" rel="stylesheet" /> 
  <link media="screen,projection" href="../../assets/css/ui.totop.css" rel="stylesheet" /> 
  <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements --> 
  <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]--> 
  <!-- Le fav and touch icons --> 
  <link rel="shortcut icon" href="../../assets/ico/favicon.ico" /> 
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="../../assets/ico/apple-touch-icon-144-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="../../assets/ico/apple-touch-icon-114-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="../../assets/ico/apple-touch-icon-72-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" href="../../assets/ico/apple-touch-icon-57-precomposed.png" /> 
  <script src="../../assets/js/ga.js"></script> 
 </head> 
 <body data-spy="scroll" data-target=".subnav" data-offset="50"> 
  <!-- Navbar
    ================================================== --> 
  <div class="navbar navbar-fixed-top"> 
   <div class="navbar-inner"> 
    <div class="container"> 
     <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse"> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> 
     <a class="brand" href="../../index.html">JavaFx 2 中文文档</a> 
     <div class="nav-collapse collapse"> 
      <ul class="nav"> 
       <li class=""><a href="../../index.html"><i class="icon icon-home icon-white"></i> 首页</a></li> 
       <li class="divider-vertical"></li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">入门<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/overview/jfxpub-overview.htm">什么是JavaFx？</a></li> 
         <li><a href="../../2/get_started/jfxpub-get_started.htm">开始使用JavaFx</a></li> 
         <li><a href="../../2/fxml_get_started/jfxpub-fxml_get_started.htm">开始使用FXML</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">用户界面<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/layout/jfxpub-layout.htm">使用布局</a></li> 
         <li><a href="../../2/text/jfxpub-text.htm">添加文本</a></li> 
         <li><a href="../../2/ui_controls/jfxpub-ui_controls.htm">使用用户界面控件</a></li> 
         <li><a href="../../2/events/jfxpub-events.htm">处理事件</a></li> 
         <li><a href="../../2/charts/jfxpub-charts.htm">创建图表</a></li> 
         <li><a href="../../2/webview/jfxpub-webview.htm">添加HTML内容</a></li> 
         <li><a href="../../2/css_tutorial/jfxpub-css_tutorial.htm">使用CSS为应用程序设置皮肤</a></li> 
         <li><a href="../../2/drag_drop/jfxpub-drag_drop.htm">拖放数据</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">效果&middot;动画&middot;媒体<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/visual_effects/jfxpub-visual_effects.htm">创建视觉效果</a></li> 
         <li><a href="../../2/transformations/jfxpub-transformations.htm">添加二维和三维变形</a></li> 
         <li><a href="../../2/animations/jfxpub-animations.htm">添加过渡和动画</a></li> 
         <li><a href="../../2/media/jfxpub-media.htm">嵌入媒体</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">应用程序逻辑<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/architecture/jfxpub-architecture.htm">架构和框架</a></li> 
         <li><a href="../../2/scenegraph/jfxpub-scenegraph.htm">使用场景图</a></li> 
         <li><a href="../../2/binding/jfxpub-binding.htm">使用属性和绑定</a></li> 
         <li><a href="../../2/collections/jfxpub-collections.htm">使用集合</a></li> 
         <li><a href="../../2/threads/jfxpub-threads.htm">并发和线程</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">部署和更多<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/deployment/jfxpub-deployment.htm">打包和部署</a></li> 
         <li><a href="../../2/swing/jfxpub-swing.htm">在Swing中使用JavaFx</a></li> 
         <li><a href="../../2/swt_interoperability/jfxpub-swt_interoperability.htm">与SWT的互操作性</a></li> 
         <li><a href="../../2/doclet/jfxpub-doclet.htm">使用Doclet</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">参考<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="http://docs.oracle.com/javafx/2/api/index.html" target="_blank"><i class="icon-share icon"></i> API文档</a></li> 
         <li><a href="http://docs.oracle.com/javafx/2/api/javafx/scene/doc-files/cssref.html" target="_blank"><i class="icon-share icon"></i> CSS参考指南</a></li> 
         <li><a href="http://docs.oracle.com/javafx/2/api/javafx/fxml/doc-files/introduction_to_fxml.html" target="_blank"><i class="icon-share icon"></i> FXML简介</a></li> 
        </ul> </li> 
       <li class="divider-vertical"></li> 
       <li class=""><a href="../../more.html"><i class="icon icon-plus-sign icon-white"></i> 更多精彩</a></li> 
       <li class=""><a href="../../license.html"><i class="icon icon-book icon-white"></i> 许可说明</a></li> 
       <li class=""><a href="../../about.html"><i class="icon icon-user icon-white"></i> 关于我们</a></li> 
      </ul> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div class="row"> 
   <div id="container" class="container span9 offset1"> 
    <!-- Masthead
================================================== --> 
    <header class="jumbotron subhead" id="overview"> 
     <!-- Insert Header Here! --> 
     <h1>Using JavaFX UI Controls</h1>
     <p class=" lead">Slider</p>
     <ul class=" pager">
      <li class=" previous"><a href="separator.htm">←上一篇</a></li>
      <li class=" next"><a href="progress.htm">下一篇→</a></li>
     </ul>
     <hr />
    </header>
    <div id="ind"> 
     <!-- /////////////// Start content copied from DARB output ////////////// --> 
     <a id="JFXUC297" name="JFXUC297"></a>
     <a id="CCHFBJCH" name="CCHFBJCH"></a>  
     <p>The <code>Slider</code> class presents a control to display and interact with a range of numeric values. The control consists of a track and a draggable thumb. It can also include tick marks and tick labels that indicate numeric values of the range. <a href="#CCHCFEBD">Figure 17-1</a> shows a typical slider and indicates its main elements.</p> 
     <div class="figure">
      <a id="CCHCFEBD" name="CCHCFEBD"></a>
      <a id="JFXUC298" name="JFXUC298"></a> 
      <p class="titleinfigure">Figure 17-1 Elements of a Slider</p> 
      <img src="img/slider-details.png" alt="Main elements of a slider." title="Main elements of a slider." longdesc="img_text/slider-details.htm" />
      <br /> 
      <br /> 
      <br />
     </div> 
     <!-- class="figure" --> 
     <a id="JFXUC299" name="JFXUC299"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref153" name="sthref153"></a> 
      <h2 class="sect1">Creating a Slider</h2> 
      <p>Take a moment to review the code fragment in <a href="#CCHDJDFE">Example 17-1</a> that produces a slider shown in <a href="#CCHCFEBD">Figure 17-1</a>.</p> 
      <div class="example">
       <a id="CCHDJDFE" name="CCHDJDFE"></a>
       <a id="JFXUC300" name="JFXUC300"></a> 
       <p class="titleinexample">Example 17-1 Creating a Slider</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
Slider slider = new Slider();
slider.setMin(0);
slider.setMax(100);
slider.setValue(40);
slider.setShowTickLabels(true);
slider.setShowTickMarks(true);
slider.setMajorTickUnit(50);
slider.setMinorTickCount(5);
slider.setBlockIncrement(10);
</pre>
      </div> 
      <!-- class="example" --> 
      <p>The <code>setMin</code> and <code>setMax</code> methods define, respectively, the minimum and the maximum numeric values represented by the slider. The <code>setValue</code> method specifies the current value of the slider, which is always less than the maximum value and more than the minimum value. Use this method to define the position of the thumb when the application starts.</p> 
      <p>Two Boolean methods, <code>setShowTickMarks</code> and <code>setShowTickLabels</code>, define the visual appearance of the slider. In <a href="#CCHDJDFE">Example 17-1</a>, the marks and labels are enabled. Additionally, the unit distance between major tick marks is set to 50, and the number of minor ticks between any two major ticks is specified as 5. You can assign the <code>setSnapToTicks</code> method to <code>true</code> to keep the slider's value aligned with the tick marks.</p> 
      <p>The <code>setBlockIncrement</code> method defines the distance that the thumb moves when a user clicks on the track. In <a href="#CCHDJDFE">Example 17-1</a>, this value is 10, which means that each time a user clicks on the track, the thumb moves 10 units toward the click location.</p> 
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXUC301" name="JFXUC301"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref154" name="sthref154"></a> 
      <h2 class="sect1">Using Sliders in Graphical Applications</h2> 
      <p>Now examine <a href="#CCHDGEHH">Figure 17-2</a>. This application uses three sliders to edit rendering characteristics of a picture. Each slider adjusts a particular visual characteristic: opacity level, sepia tone value, or scaling factor.</p> 
      <div class="figure">
       <a id="CCHDGEHH" name="CCHDGEHH"></a>
       <a id="JFXUC302" name="JFXUC302"></a> 
       <p class="titleinfigure">Figure 17-2 Three Sliders</p> 
       <img src="img/slider-cappuccino.png" alt="Description of Figure 17-2 follows" title="Description of Figure 17-2 follows" longdesc="img_text/slider-cappuccino.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" --> 
      <p><a href="#CCHCFADC">Example 17-2</a> shows the source code of this application.</p> 
      <div class="example">
       <a id="CCHCFADC" name="CCHCFADC"></a>
       <a id="JFXUC303" name="JFXUC303"></a> 
       <p class="titleinexample">Example 17-2 Slider Sample</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
import javafx.application.Application;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.geometry.Insets;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.Slider;
import javafx.scene.effect.SepiaTone;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.GridPane;
import javafx.scene.paint.Color;
import javafx.stage.Stage;
 
public class Main extends Application {
 
    final Slider opacityLevel = new Slider(0, 1, 1);    
    final Slider sepiaTone = new Slider(0, 1, 1);
    final Slider scaling = new Slider (0.5, 1, 1);
    final Image image  = new Image(getClass().getResourceAsStream(
        &quot;cappuccino.jpg&quot;)
    );
 
    final Label opacityCaption = new Label(&quot;Opacity Level:&quot;);
    final Label sepiaCaption = new Label(&quot;Sepia Tone:&quot;);
    final Label scalingCaption = new Label(&quot;Scaling Factor:&quot;);
 
    final Label opacityValue = new Label(
        Double.toString(opacityLevel.getValue()));
    final Label sepiaValue = new Label(
        Double.toString(sepiaTone.getValue()));
    final Label scalingValue = new Label(
        Double.toString(scaling.getValue()));
 
    final static Color textColor = Color.WHITE;
    final static SepiaTone sepiaEffect = new SepiaTone();
 
    @Override
    public void start(Stage stage) {
        Group root = new Group();
        Scene scene = new Scene(root, 600, 400);
        stage.setScene(scene);
        stage.setTitle(&quot;Slider Sample&quot;);
        scene.setFill(Color.BLACK);
 
        GridPane grid = new GridPane();
        grid.setPadding(new Insets(10, 10, 10, 10));
        grid.setVgap(10);
        grid.setHgap(70);
 
        final ImageView cappuccino = new ImageView (image);
        cappuccino.setEffect(sepiaEffect);
        GridPane.setConstraints(cappuccino, 0, 0);
        GridPane.setColumnSpan(cappuccino, 3);
        grid.getChildren().add(cappuccino);
        scene.setRoot(grid);
 
        opacityCaption.setTextFill(textColor);
        GridPane.setConstraints(opacityCaption, 0, 1);
        grid.getChildren().add(opacityCaption);
        
 
        opacityLevel.valueProperty().addListener(new ChangeListener&lt;Number&gt;() {
            public void changed(ObservableValue&lt;? extends Number&gt; ov,
                Number old_val, Number new_val) {
                    cappuccino.setOpacity(new_val.doubleValue());
                    opacityValue.setText(String.format(&quot;%.2f&quot;, new_val));
            }
        });
 
        GridPane.setConstraints(opacityLevel, 1, 1);
        grid.getChildren().add(opacityLevel);
 
        opacityValue.setTextFill(textColor);
        GridPane.setConstraints(opacityValue, 2, 1);
        grid.getChildren().add(opacityValue);
 
        sepiaCaption.setTextFill(textColor);
        GridPane.setConstraints(sepiaCaption, 0, 2);
        grid.getChildren().add(sepiaCaption);
 
        sepiaTone.valueProperty().addListener(new ChangeListener&lt;Number&gt;() {
            public void changed(ObservableValue&lt;? extends Number&gt; ov,
                Number old_val, Number new_val) {
                    sepiaEffect.setLevel(new_val.doubleValue());
                    sepiaValue.setText(String.format(&quot;%.2f&quot;, new_val));
            }
        });
        GridPane.setConstraints(sepiaTone, 1, 2);
        grid.getChildren().add(sepiaTone);
 
        sepiaValue.setTextFill(textColor);
        GridPane.setConstraints(sepiaValue, 2, 2);
        grid.getChildren().add(sepiaValue);
 
        scalingCaption.setTextFill(textColor);
        GridPane.setConstraints(scalingCaption, 0, 3);
        grid.getChildren().add(scalingCaption);
 
        scaling.valueProperty().addListener(new ChangeListener&lt;Number&gt;() {
            public void changed(ObservableValue&lt;? extends Number&gt; ov,
                Number old_val, Number new_val) {
                    cappuccino.setScaleX(new_val.doubleValue());
                    cappuccino.setScaleY(new_val.doubleValue());
                    scalingValue.setText(String.format(&quot;%.2f&quot;, new_val));
            }
        });
        GridPane.setConstraints(scaling, 1, 3);
        grid.getChildren().add(scaling);
 
        scalingValue.setTextFill(textColor);
        GridPane.setConstraints(scalingValue, 2, 3);
        grid.getChildren().add(scalingValue);
 
        stage.show();
    }
 
    public static void main(String[] args) {
        launch(args);
    }
}
</pre>
      </div> 
      <!-- class="example" --> 
      <p>The opacity property of the <code>ImageView</code> object changes in accordance with the value of the first slider, named opacityLevel. The level of the <code>SepiaTone</code> effect changes when the value of the sepiaTone slider changes. The third slider defines the scaling factor for the picture by passing to the <code>setScaleX</code> and <code>setScaleY</code> methods the current value of the slider.</p> 
      <p>The code fragment in <a href="#CCHBGEDE">Example 17-3</a> demonstrates the methods that convert the double value returned by the <code>getValue</code> method of the <code>Slider</code> class into <code>String</code>. It also applies formatting to render the slider's value as a float number with two digits after the point.</p> 
      <div class="example">
       <a id="CCHBGEDE" name="CCHBGEDE"></a>
       <a id="JFXUC304" name="JFXUC304"></a> 
       <p class="titleinexample">Example 17-3 Formatting the Rendered Slider's Value</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
scalingValue.setText((Double.toString(value)).format(&quot;%.2f&quot;, value));
</pre>
      </div> 
      <!-- class="example" --> 
      <p>The next step to enhance the look and feel of a slider is to apply visual effects or CSS styles to it.</p> 
      <p class="itemizedlisttitle">Related API Documentation &nbsp;</p> 
      <ul> 
       <li> <p><code>Slider</code></p> </li> 
       <li> <p><code>SepiaTone</code></p> </li> 
      </ul> 
     </div> 
     <!-- class="sect1" --> 
     <!-- /////////////// End content copied from DARB output ////////////// --> 
    </div> 
    <!-- Insert Sections Here! --> 
    <!-- Footer
      ================================================== --> 
    <footer class="footer"> 
     <!-- UY BEGIN --> 
     <div id="uyan_frame"></div> 
     <script type="text/javascript" id="UYScript" src="http://v1.uyan.cc/js/iframe.js?UYUserId=1529249" async=""></script> 
     <!-- UY END --> 
    </footer> 
   </div>
   <div class=" span3" style="padding-top: 110px;">
    <div class=" well">
     <ul class=" nav nav-list">
      <li class=" nav-header">本章目录</li>
      <li><a href="jfxpub-ui_controls.htm">About This Tutorial</a></li>
      <li><a href="overview.htm">JavaFX UI Controls</a></li>
      <li><a href="label.htm">Label</a></li>
      <li><a href="button.htm">Button</a></li>
      <li><a href="radio-button.htm">Radio Button</a></li>
      <li><a href="toggle-button.htm">Toggle Button</a></li>
      <li><a href="checkbox.htm">Checkbox</a></li>
      <li><a href="choice-box.htm">Choice Box</a></li>
      <li><a href="text-field.htm">Text Field</a></li>
      <li><a href="password-field.htm">Password Field</a></li>
      <li><a href="scrollbar.htm">Scroll Bar</a></li>
      <li><a href="scrollpane.htm">Scroll Pane</a></li>
      <li><a href="list-view.htm">List View</a></li>
      <li><a href="table-view.htm">Table View</a></li>
      <li><a href="tree-view.htm">Tree View</a></li>
      <li><a href="combo-box.htm">Combo Box</a></li>
      <li><a href="separator.htm">Separator</a></li>
      <li class=" active"><a href="slider.htm">Slider</a></li>
      <li><a href="progress.htm">Progress Bar and Progress Indicator</a></li>
      <li><a href="hyperlink.htm">Hyperlink</a></li>
      <li><a href="tooltip.htm">Tooltip</a></li>
      <li><a href="editor.htm">HTML Editor</a></li>
      <li><a href="accordion-titledpane.htm">Titled Pane and Accordion</a></li>
      <li><a href="menu_controls.htm">Menu</a></li>
      <li><a href="custom.htm">Customization of UI Controls</a></li>
      <li class=" divider"></li>
      <li class=" nav-header">源码下载</li>
      <li><a href="http://download.oracle.com/javafx/2/ui_controls/UIControlSamples.zip">UIControlSamples.zip</a></li>
      <li class=" divider"></li>
      <li class=" nav-header">版本信息</li>
      <li>平台版本：JavaFX 2.1</li>
      <li>翻译编辑：(未翻译)</li>
      <li>最后更新：2012年7月28日</li>
     </ul>
    </div>
   </div>
   <!-- /container --> 
  </div> 
  <!-- JiaThis Button BEGIN --> 
  <script type="text/javascript">var jiathis_config = {data_track_clickback:true};</script> 
  <script type="text/javascript" src="http://v3.jiathis.com/code/jiathis_r.js?type=left&amp;move=0&amp;btn=l2.gif&amp;uid=1529249" charset="utf-8"></script> 
  <!-- JiaThis Button END --> 
  <!-- Le javascript
    ================================================== --> 
  <!-- Placed at the end of the document so the pages load faster --> 
  <script src="../../assets/js/jquery.min.js"></script> 
  <script src="../../assets/js/easing.js" type="text/javascript"></script> 
  <script src="../../assets/js/jquery.ui.totop.min.js" type="text/javascript"></script> 
  <script src="../../assets/js/google-code-prettify/prettify.js"></script> 
  <script type="text/javascript">
		$(document).ready(function() {
			/*
			var defaults = {
	  			containerID: 'toTop', // fading element id
				containerHoverID: 'toTopHover', // fading element hover id
				scrollSpeed: 1200,
				easingType: 'linear' 
	 		};
			*/
			$().UItoTop({ easingType: 'easeOutQuart' });
		});
	</script> 
  <script src="../../assets/js/bootstrap.min.js"></script> 
  <script src="../../assets/js/application.js"></script>   
 </body>
</html>