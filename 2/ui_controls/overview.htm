<!DOCTYPE html>
<html>
 <head> 
  <meta charset="utf-8" /> 
  <title>JavaFX UI Controls &middot; Using JavaFX UI Controls &middot; JavaFx 2 中文文档</title> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0" /> 
  <meta name="keywords" content="JavaFx JavaFx2 JavaFx文档 JavaFx2文档 JavaFx2中文文档 JavaFx中文文档" /> 
  <meta name="description" content="JavaFx 2 中文文档" /> 
  <meta name="author" content="" /> 
  <!-- Le styles --> 
  <link href="../../assets/css/bootstrap.css" rel="stylesheet" /> 
  <link href="../../assets/css/bootstrap-responsive.css" rel="stylesheet" /> 
  <link href="../../assets/css/docs.css" rel="stylesheet" /> 
  <link href="../../assets/js/google-code-prettify/prettify.css" rel="stylesheet" /> 
  <link media="screen,projection" href="../../assets/css/ui.totop.css" rel="stylesheet" /> 
  <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements --> 
  <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]--> 
  <!-- Le fav and touch icons --> 
  <link rel="shortcut icon" href="../../assets/ico/favicon.ico" /> 
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="../../assets/ico/apple-touch-icon-144-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="../../assets/ico/apple-touch-icon-114-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="../../assets/ico/apple-touch-icon-72-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" href="../../assets/ico/apple-touch-icon-57-precomposed.png" /> 
  <script src="../../assets/js/ga.js"></script> 
 </head> 
 <body data-spy="scroll" data-target=".subnav" data-offset="50"> 
  <!-- Navbar
    ================================================== --> 
  <div class="navbar navbar-fixed-top"> 
   <div class="navbar-inner"> 
    <div class="container"> 
     <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse"> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> 
     <a class="brand" href="../../index.html">JavaFx 2 中文文档</a> 
     <div class="nav-collapse collapse"> 
      <ul class="nav"> 
       <li class=""><a href="../../index.html"><i class="icon icon-home icon-white"></i> 首页</a></li> 
       <li class="divider-vertical"></li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">入门<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/overview/jfxpub-overview.htm">什么是JavaFx？</a></li> 
         <li><a href="../../2/get_started/jfxpub-get_started.htm">开始使用JavaFx</a></li> 
         <li><a href="../../2/fxml_get_started/jfxpub-fxml_get_started.htm">开始使用FXML</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">用户界面<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/layout/jfxpub-layout.htm">使用布局</a></li> 
         <li><a href="../../2/text/jfxpub-text.htm">添加文本</a></li> 
         <li><a href="../../2/ui_controls/jfxpub-ui_controls.htm">使用用户界面控件</a></li> 
         <li><a href="../../2/events/jfxpub-events.htm">处理事件</a></li> 
         <li><a href="../../2/charts/jfxpub-charts.htm">创建图表</a></li> 
         <li><a href="../../2/webview/jfxpub-webview.htm">添加HTML内容</a></li> 
         <li><a href="../../2/css_tutorial/jfxpub-css_tutorial.htm">使用CSS为应用程序设置皮肤</a></li> 
         <li><a href="../../2/drag_drop/jfxpub-drag_drop.htm">拖放数据</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">效果&middot;动画&middot;媒体<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/visual_effects/jfxpub-visual_effects.htm">创建视觉效果</a></li> 
         <li><a href="../../2/transformations/jfxpub-transformations.htm">添加二维和三维变形</a></li> 
         <li><a href="../../2/animations/jfxpub-animations.htm">添加过渡和动画</a></li> 
         <li><a href="../../2/media/jfxpub-media.htm">嵌入媒体</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">应用程序逻辑<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/architecture/jfxpub-architecture.htm">架构和框架</a></li> 
         <li><a href="../../2/scenegraph/jfxpub-scenegraph.htm">使用场景图</a></li> 
         <li><a href="../../2/binding/jfxpub-binding.htm">使用属性和绑定</a></li> 
         <li><a href="../../2/collections/jfxpub-collections.htm">使用集合</a></li> 
         <li><a href="../../2/threads/jfxpub-threads.htm">并发和线程</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">部署和更多<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/deployment/jfxpub-deployment.htm">打包和部署</a></li> 
         <li><a href="../../2/swing/jfxpub-swing.htm">在Swing中使用JavaFx</a></li> 
         <li><a href="../../2/swt_interoperability/jfxpub-swt_interoperability.htm">与SWT的互操作性</a></li> 
         <li><a href="../../2/doclet/jfxpub-doclet.htm">使用Doclet</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">参考<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="http://docs.oracle.com/javafx/2/api/index.html" target="_blank"><i class="icon-share icon"></i> API文档</a></li> 
         <li><a href="http://docs.oracle.com/javafx/2/api/javafx/scene/doc-files/cssref.html" target="_blank"><i class="icon-share icon"></i> CSS参考指南</a></li> 
         <li><a href="http://docs.oracle.com/javafx/2/api/javafx/fxml/doc-files/introduction_to_fxml.html" target="_blank"><i class="icon-share icon"></i> FXML简介</a></li> 
        </ul> </li> 
       <li class="divider-vertical"></li> 
       <li class=""><a href="../../more.html"><i class="icon icon-plus-sign icon-white"></i> 更多精彩</a></li> 
       <li class=""><a href="../../license.html"><i class="icon icon-book icon-white"></i> 许可说明</a></li> 
       <li class=""><a href="../../about.html"><i class="icon icon-user icon-white"></i> 关于我们</a></li> 
      </ul> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div class="row"> 
   <div id="container" class="container span9 offset1"> 
    <!-- Masthead
================================================== --> 
    <header class="jumbotron subhead" id="overview"> 
     <!-- Insert Header Here! --> 
     <h1>Using JavaFX UI Controls</h1>
     <p class=" lead">JavaFX UI Controls</p>
     <ul class=" pager">
      <li class=" previous"><a href="jfxpub-ui_controls.htm">←上一篇</a></li>
      <li class=" next"><a href="label.htm">下一篇→</a></li>
     </ul>
     <hr />
    </header>
    <div id="ind"> 
     <!-- /////////////// Start content copied from DARB output ////////////// --> 
     <a id="JFXUC102" name="JFXUC102"></a>
     <a id="BABJACHC" name="BABJACHC"></a>  
     <p>The JavaFX UI controls available through the API are built by using nodes in the scene graph. Therefore, the controls can use the visually rich features of the JavaFX platform. Because the JavaFX APIs are fully implemented in Java, you can easily integrate the JavaFX UI controls into your existing Java applications.</p> 
     <p><a href="#CJABIAJD">Figure 1-1</a> shows the typical UI controls you can find in the <a href="../../../../www.oracle.com/technetwork/java/javafx/samples/index.html">Ensemble</a> sample application. Try this application to evaluate the wide range of controls, their behavior, and available styles.</p> 
     <div class="figure">
      <a id="CJABIAJD" name="CJABIAJD"></a> 
      <p class="titleinfigure">Figure 1-1 JavaFX UI Controls</p> 
      <img src="img/uicontrols-fig1.png" alt="Description of Figure 1-1 follows" title="Description of Figure 1-1 follows" longdesc="img_text/uicontrols-fig1.htm" />
      <br /> 
      <br /> 
      <br />
     </div> 
     <!-- class="figure" --> 
     <a id="JFXUC103" name="JFXUC103"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref4" name="sthref4"></a> 
      <h2 class="sect1">Supported UI Controls in JavaFX 2.0</h2> 
      <p>The classes to construct UI controls reside in the <code>javafx.scene.control</code> package of the API.</p> 
      <p>The list of UI controls includes typical UI components that you might recognize from your previous development of client applications in Java. However, the JavaFX 2.0 SDK introduces new Java UI controls, like <code>TitledPane</code> and <code>TableView</code>.</p> 
      <p><a href="#CEGJHCHH">Figure 1-2</a> shows a screen capture of three <code>TitledPane</code> elements with lists of settings for a social network application. The lists can slide in (retract) and slide out (extend).</p> 
      <div class="figure">
       <a id="CEGJHCHH" name="CEGJHCHH"></a>
       <a id="JFXUC105" name="JFXUC105"></a> 
       <p class="titleinfigure">Figure 1-2 Titled Panes</p> 
       <img src="img/uicontrols-fig2.jpg" alt="TitledPanes" title="TitledPanes" longdesc="img_text/uicontrols-fig2.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" --> 
      <p>See the API documentation for the complete list of UI controls.</p> 
      <p>The UI control classes provide additional variables and methods beyond those of the <code>Control</code> class to support typical user interactions in an intuitive manner. You can assign a specific style to your UI components by applying Cascading Style Sheets (CSS). For some unusual tasks, you might need to extend the <code>Control</code> class to create a custom UI component, or use the <code>Skin</code> interface to define a new skin for an existing control.</p> 
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXUC106" name="JFXUC106"></a> 
     <div class="sect1">
      <a id="sthref6" name="sthref6"></a> 
      <h2 class="sect1">Features and Effects</h2> 
      <p>Because UI controls from the <code>javafx.scene.control</code> package are all extensions of the <code>Node</code> class, they can be integrated with the scene graph rendering, animation, transformations, and animated transitions.</p> 
      <p>Consider the task of creating a button, applying a reflection to it, and animating the button by altering its opacity from its maximum value to its minimum value.</p> 
      <p><a href="#CEGJEJGG">Figure 1-3</a> shows three states of the button through the animation timeline. The left image shows the button when its opacity is set to <code>1.0</code>, the central image shows the opacity set to <code>0.8</code>, and the right image shows the opacity set to <code>0.5</code>.</p> 
      <div class="figure">
       <a id="CEGJEJGG" name="CEGJEJGG"></a>
       <a id="JFXUC107" name="JFXUC107"></a> 
       <p class="titleinfigure">Figure 1-3 Animated Button</p> 
       <img src="img/uicontrols-fig3.png" alt="Screenshot of the animated button" title="Screenshot of the animated button" longdesc="img_text/uicontrols-fig3.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" --> 
      <p>By using the JavaFX APIs, you can implement this task with only a few lines of code.</p> 
      <p><a href="#CEGBGDCC">Example 1-1</a> creates and starts an indefinite timeline, where within a key frame of 600 milliseconds the button's opacity changes from its default value (1.0) to 0.0. The <code>setAutoReverse</code> method enables the reverse order.</p> 
      <div class="example">
       <a id="CEGBGDCC" name="CEGBGDCC"></a>
       <a id="JFXUC108" name="JFXUC108"></a> 
       <p class="titleinexample">Example 1-1 Creating an Animated Button</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
import javafx.animation.KeyFrame;
import javafx.animation.KeyValue;
import javafx.animation.Timeline;
import javafx.util.Duration;
import javafx.scene.control.Button;
import javafx.scene.text.Font;
import javafx.scene.effect.Reflection;

...
Button button = new Button();
    button.setText(&quot;OK&quot;);
    button.setFont(new Font(&quot;Tahoma&quot;, 24));
    button.setEffect(new Reflection());
 
final Timeline timeline = new Timeline();
timeline.setCycleCount(Timeline.INDEFINITE);
timeline.setAutoReverse(true);
final KeyValue kv = new KeyValue(button.opacityProperty(), 0);
final KeyFrame kf = new KeyFrame(Duration.millis(600), kv);
timeline.getKeyFrames().add(kf);
timeline.play();
...
</pre>
      </div> 
      <!-- class="example" --> 
      <p>You can also apply other visual effects that are available in the <code>javafx.scene.effect</code> package, such as shadow, lighting, or motion blur.</p> 
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXUC109" name="JFXUC109"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref8" name="sthref8"></a> 
      <h2 class="sect1">Styling UI Controls with CSS</h2> 
      <p>You can customize the look of the built-in UI controls by defining your own Cascading Style Sheets (CSS). Using CSS in JavaFX applications is much the same as using CSS in HTML, because each case is based on the same CSS specification. The visual state of a control is defined by the .css file, as shown in <a href="#CEGHCHEE">Example 1-2</a>.</p> 
      <div class="example">
       <a id="CEGHCHEE" name="CEGHCHEE"></a>
       <a id="JFXUC110" name="JFXUC110"></a> 
       <p class="titleinexample">Example 1-2 Defining Styles for UI Controls in the CSS File</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
/*controlStyle.css */
 
.scene{
    -fx-font: 14pt &quot;Cambria Bold&quot;;
    -fx-color: #e79423;
    -fx-background: #67644e;
}
 
.button{
    -fx-text-fill: #006464;
    -fx-background-color: #e79423;
    -fx-border-radius: 20;
    -fx-background-radius: 20;
    -fx-padding: 5;
}
</pre>
      </div> 
      <!-- class="example" --> 
      <p>You can enable the style in the application through the <code>getStylesheets</code> method of the <code>Scene</code> class, as shown in <a href="#CEGCBIIF">Example 1-3</a>.</p> 
      <div class="example">
       <a id="CEGCBIIF" name="CEGCBIIF"></a>
       <a id="JFXUC111" name="JFXUC111"></a> 
       <p class="titleinexample">Example 1-3 Applying CSS</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
Scene scene = new Scene();
scene.getStylesheets().add(&quot;uicontrolssample/controlStyle.css&quot;);
</pre>
      </div> 
      <!-- class="example" --> 
      <p>Additionally, you define the style of a control directly in the code of your application by using the <code>setStyle</code> method. The <code>-fx-base</code> property defined for the toggle button in <a href="#CEGDDCBD">Example 1-4</a> overrides the corresponding properties defined in the .css file for all the controls added to the scene.</p> 
      <div class="example">
       <a id="CEGDDCBD" name="CEGDDCBD"></a>
       <a id="JFXUC112" name="JFXUC112"></a> 
       <p class="titleinexample">Example 1-4 Defining the Style of a Toggle Button in the JavaFX Application</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
ToggleButton tb3 = new ToggleButton (&quot;I don't know&quot;);
tb3.setStyle(&quot;-fx-base: #ed1c24;&quot;);
</pre>
      </div> 
      <!-- class="example" --> 
      <p><a href="#CEGGFCCG">Figure 1-4</a> shows how the styled toggle button looks when it is added to the application.</p> 
      <div class="figure">
       <a id="CEGGFCCG" name="CEGGFCCG"></a>
       <a id="JFXUC113" name="JFXUC113"></a> 
       <p class="titleinfigure">Figure 1-4 Applying CSS Style to a Toggle Button</p> 
       <img src="img/uicontrols-fig4.png" alt="Applying an alternative base color to a toggle button" title="Applying an alternative base color to a toggle button" longdesc="img_text/uicontrols-fig4.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" -->
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXUC114" name="JFXUC114"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref10" name="sthref10"></a> 
      <h2 class="sect1">Charts</h2> 
      <p>In addition to the typical elements of a user interface, JavaFX SDK provides prefabricated charts in the <code>javafx.scene.chart</code> package. The following types of charts are currently supported: area chart, bar chart, bubble chart, line chart, pie chart, and scatter chart. A chart might contain several series of data.</p> 
      <p><a href="#CHDJAFBC">Figure 1-5</a> shows a pie chart of imported fruits.</p> 
      <div class="figure">
       <a id="CHDJAFBC" name="CHDJAFBC"></a>
       <a id="JFXUC115" name="JFXUC115"></a> 
       <p class="titleinfigure">Figure 1-5 Pie Chart</p> 
       <img src="img/pie-chart.png" alt="Pie chart" title="Pie chart" longdesc="img_text/pie-chart.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" --> 
      <p>Unlike with other Java client toolkits, with the JavaFX SDK you can build such a chart in your application by adding just a few lines of code. You can also define various color schemes and styles, apply visual effects, process mouse events, and create animation.</p> 
      <p>See <a href="../charts/jfxpub-charts.htm">Using JavaFX Charts</a> for more information about chart features and capabilities.</p> 
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXUC117" name="JFXUC117"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref12" name="sthref12"></a> 
      <h2 class="sect1">Integrating JavaFX 2.0 UI Controls in Swing</h2> 
      <p>You can integrate JavaFX UI controls into existing Java client applications built on the Swing toolkit.</p> 
      <p class="orderedlisttitle">To integrate JavaFX content into a Swing application, use the following steps:&nbsp;</p> 
      <ol> 
       <li> <p>Add all the JavaFX UI controls to the <code>javafx.scene.Scene</code> object one by one, within a layout container, or as a group.</p> </li> 
       <li> <p>Add the <code>Scene</code> object to the content of the Swing application.</p> </li> 
      </ol> 
      <p>If you need to place a single JavaFX 2.0 control in your existing Swing code, you must perform both of the preceding steps.</p> 
      <p>Even when they are integrated into a Swing application, the JavaFX 2.0 UI controls are still rendered by using the Prism graphical library and take full advantage of its advanced rendering capabilities.</p> 
      <p>See the <a href="../swing/jfxpub-swing.htm">JavaFX in Swing</a> tutorial for more information about JavaFX and Swing interoperability.</p> 
     </div> 
     <!-- class="sect1" --> 
     <!-- /////////////// End content copied from DARB output ////////////// --> 
    </div> 
    <!-- Insert Sections Here! --> 
    <!-- Footer
      ================================================== --> 
    <footer class="footer"> 
     <!-- UY BEGIN --> 
     <div id="uyan_frame"></div> 
     <script type="text/javascript" id="UYScript" src="http://v1.uyan.cc/js/iframe.js?UYUserId=1529249" async=""></script> 
     <!-- UY END --> 
    </footer> 
   </div>
   <div class=" span3" style="padding-top: 110px;">
    <div class=" well">
     <ul class=" nav nav-list">
      <li class=" nav-header">本章目录</li>
      <li><a href="jfxpub-ui_controls.htm">About This Tutorial</a></li>
      <li class=" active"><a href="overview.htm">JavaFX UI Controls</a></li>
      <li><a href="label.htm">Label</a></li>
      <li><a href="button.htm">Button</a></li>
      <li><a href="radio-button.htm">Radio Button</a></li>
      <li><a href="toggle-button.htm">Toggle Button</a></li>
      <li><a href="checkbox.htm">Checkbox</a></li>
      <li><a href="choice-box.htm">Choice Box</a></li>
      <li><a href="text-field.htm">Text Field</a></li>
      <li><a href="password-field.htm">Password Field</a></li>
      <li><a href="scrollbar.htm">Scroll Bar</a></li>
      <li><a href="scrollpane.htm">Scroll Pane</a></li>
      <li><a href="list-view.htm">List View</a></li>
      <li><a href="table-view.htm">Table View</a></li>
      <li><a href="tree-view.htm">Tree View</a></li>
      <li><a href="combo-box.htm">Combo Box</a></li>
      <li><a href="separator.htm">Separator</a></li>
      <li><a href="slider.htm">Slider</a></li>
      <li><a href="progress.htm">Progress Bar and Progress Indicator</a></li>
      <li><a href="hyperlink.htm">Hyperlink</a></li>
      <li><a href="tooltip.htm">Tooltip</a></li>
      <li><a href="editor.htm">HTML Editor</a></li>
      <li><a href="accordion-titledpane.htm">Titled Pane and Accordion</a></li>
      <li><a href="menu_controls.htm">Menu</a></li>
      <li><a href="custom.htm">Customization of UI Controls</a></li>
      <li class=" divider"></li>
      <li class=" nav-header">源码下载</li>
      <li><a href="http://download.oracle.com/javafx/2/ui_controls/UIControlSamples.zip">UIControlSamples.zip</a></li>
      <li class=" divider"></li>
      <li class=" nav-header">版本信息</li>
      <li>平台版本：JavaFX 2.1</li>
      <li>翻译编辑：(未翻译)</li>
      <li>最后更新：2012年7月28日</li>
     </ul>
    </div>
   </div>
   <!-- /container --> 
  </div> 
  <!-- JiaThis Button BEGIN --> 
  <script type="text/javascript">var jiathis_config = {data_track_clickback:true};</script> 
  <script type="text/javascript" src="http://v3.jiathis.com/code/jiathis_r.js?type=left&amp;move=0&amp;btn=l2.gif&amp;uid=1529249" charset="utf-8"></script> 
  <!-- JiaThis Button END --> 
  <!-- Le javascript
    ================================================== --> 
  <!-- Placed at the end of the document so the pages load faster --> 
  <script src="../../assets/js/jquery.min.js"></script> 
  <script src="../../assets/js/easing.js" type="text/javascript"></script> 
  <script src="../../assets/js/jquery.ui.totop.min.js" type="text/javascript"></script> 
  <script src="../../assets/js/google-code-prettify/prettify.js"></script> 
  <script type="text/javascript">
		$(document).ready(function() {
			/*
			var defaults = {
	  			containerID: 'toTop', // fading element id
				containerHoverID: 'toTopHover', // fading element hover id
				scrollSpeed: 1200,
				easingType: 'linear' 
	 		};
			*/
			$().UItoTop({ easingType: 'easeOutQuart' });
		});
	</script> 
  <script src="../../assets/js/bootstrap.min.js"></script> 
  <script src="../../assets/js/application.js"></script>   
 </body>
</html>