<!DOCTYPE html>
<html>
 <head> 
  <meta charset="utf-8" /> 
  <title>List View &middot; Using JavaFX UI Controls &middot; JavaFx 2 中文文档</title> 
  <meta name="viewport" content="width=device-width, initial-scale=1.0" /> 
  <meta name="keywords" content="JavaFx JavaFx2 JavaFx文档 JavaFx2文档 JavaFx2中文文档 JavaFx中文文档" /> 
  <meta name="description" content="JavaFx 2 中文文档" /> 
  <meta name="author" content="" /> 
  <!-- Le styles --> 
  <link href="../../assets/css/bootstrap.css" rel="stylesheet" /> 
  <link href="../../assets/css/bootstrap-responsive.css" rel="stylesheet" /> 
  <link href="../../assets/css/docs.css" rel="stylesheet" /> 
  <link href="../../assets/js/google-code-prettify/prettify.css" rel="stylesheet" /> 
  <link media="screen,projection" href="../../assets/css/ui.totop.css" rel="stylesheet" /> 
  <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements --> 
  <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]--> 
  <!-- Le fav and touch icons --> 
  <link rel="shortcut icon" href="../../assets/ico/favicon.ico" /> 
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="../../assets/ico/apple-touch-icon-144-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="../../assets/ico/apple-touch-icon-114-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="../../assets/ico/apple-touch-icon-72-precomposed.png" /> 
  <link rel="apple-touch-icon-precomposed" href="../../assets/ico/apple-touch-icon-57-precomposed.png" /> 
  <script src="../../assets/js/ga.js"></script> 
 </head> 
 <body data-spy="scroll" data-target=".subnav" data-offset="50"> 
  <!-- Navbar
    ================================================== --> 
  <div class="navbar navbar-fixed-top"> 
   <div class="navbar-inner"> 
    <div class="container"> 
     <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse"> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> 
     <a class="brand" href="../../index.html">JavaFx 2 中文文档</a> 
     <div class="nav-collapse collapse"> 
      <ul class="nav"> 
       <li class=""><a href="../../index.html"><i class="icon icon-home icon-white"></i> 首页</a></li> 
       <li class="divider-vertical"></li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">入门<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/overview/jfxpub-overview.htm">什么是JavaFx？</a></li> 
         <li><a href="../../2/get_started/jfxpub-get_started.htm">开始使用JavaFx</a></li> 
         <li><a href="../../2/fxml_get_started/jfxpub-fxml_get_started.htm">开始使用FXML</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">用户界面<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/layout/jfxpub-layout.htm">使用布局</a></li> 
         <li><a href="../../2/text/jfxpub-text.htm">添加文本</a></li> 
         <li><a href="../../2/ui_controls/jfxpub-ui_controls.htm">使用用户界面控件</a></li> 
         <li><a href="../../2/events/jfxpub-events.htm">处理事件</a></li> 
         <li><a href="../../2/charts/jfxpub-charts.htm">创建图表</a></li> 
         <li><a href="../../2/webview/jfxpub-webview.htm">添加HTML内容</a></li> 
         <li><a href="../../2/css_tutorial/jfxpub-css_tutorial.htm">使用CSS为应用程序设置皮肤</a></li> 
         <li><a href="../../2/drag_drop/jfxpub-drag_drop.htm">拖放数据</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">效果&middot;动画&middot;媒体<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/visual_effects/jfxpub-visual_effects.htm">创建视觉效果</a></li> 
         <li><a href="../../2/transformations/jfxpub-transformations.htm">添加二维和三维变形</a></li> 
         <li><a href="../../2/animations/jfxpub-animations.htm">添加过渡和动画</a></li> 
         <li><a href="../../2/media/jfxpub-media.htm">嵌入媒体</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">应用程序逻辑<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/architecture/jfxpub-architecture.htm">架构和框架</a></li> 
         <li><a href="../../2/scenegraph/jfxpub-scenegraph.htm">使用场景图</a></li> 
         <li><a href="../../2/binding/jfxpub-binding.htm">使用属性和绑定</a></li> 
         <li><a href="../../2/collections/jfxpub-collections.htm">使用集合</a></li> 
         <li><a href="../../2/threads/jfxpub-threads.htm">并发和线程</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">部署和更多<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="../../2/deployment/jfxpub-deployment.htm">打包和部署</a></li> 
         <li><a href="../../2/swing/jfxpub-swing.htm">在Swing中使用JavaFx</a></li> 
         <li><a href="../../2/swt_interoperability/jfxpub-swt_interoperability.htm">与SWT的互操作性</a></li> 
         <li><a href="../../2/doclet/jfxpub-doclet.htm">使用Doclet</a></li> 
        </ul> </li> 
       <li class="dropdown"> <a href="#" class="dropdown-toggle" data-toggle="dropdown">参考<b class="caret"></b></a> 
        <ul class="dropdown-menu"> 
         <li><a href="http://docs.oracle.com/javafx/2/api/index.html" target="_blank"><i class="icon-share icon"></i> API文档</a></li> 
         <li><a href="http://docs.oracle.com/javafx/2/api/javafx/scene/doc-files/cssref.html" target="_blank"><i class="icon-share icon"></i> CSS参考指南</a></li> 
         <li><a href="http://docs.oracle.com/javafx/2/api/javafx/fxml/doc-files/introduction_to_fxml.html" target="_blank"><i class="icon-share icon"></i> FXML简介</a></li> 
        </ul> </li> 
       <li class="divider-vertical"></li> 
       <li class=""><a href="../../more.html"><i class="icon icon-plus-sign icon-white"></i> 更多精彩</a></li> 
       <li class=""><a href="../../license.html"><i class="icon icon-book icon-white"></i> 许可说明</a></li> 
       <li class=""><a href="../../about.html"><i class="icon icon-user icon-white"></i> 关于我们</a></li> 
      </ul> 
     </div> 
    </div> 
   </div> 
  </div> 
  <div class="row"> 
   <div id="container" class="container span9 offset1"> 
    <!-- Masthead
================================================== --> 
    <header class="jumbotron subhead" id="overview"> 
     <!-- Insert Header Here! --> 
     <h1>Using JavaFX UI Controls</h1>
     <p class=" lead">List View</p>
     <ul class=" pager">
      <li class=" previous"><a href="scrollpane.htm">←上一篇</a></li>
      <li class=" next"><a href="table-view.htm">下一篇→</a></li>
     </ul>
     <hr />
    </header>
    <div id="ind"> 
     <!-- /////////////// Start content copied from DARB output ////////////// --> 
     <a id="JFXUC249" name="JFXUC249"></a>
     <a id="CEGGEDBF" name="CEGGEDBF"></a>  
     <p>The <code>ListView</code> class represents a scrollable list of items. <a href="#CEGDFIJJ">Figure 12-1</a> shows the list of available accommodation types.</p> 
     <div class="figure">
      <a id="CEGDFIJJ" name="CEGDFIJJ"></a>
      <a id="JFXUC250" name="JFXUC250"></a> 
      <p class="titleinfigure">Figure 12-1 Simple List View</p> 
      <img src="img/list-default.png" alt="Simple vertical list view." title="Simple vertical list view." longdesc="img_text/list-default.htm" />
      <br /> 
      <br /> 
      <br />
     </div> 
     <!-- class="figure" --> 
     <p>You can populate the list by defining its items with the <code>setItems</code> method. You can also create a view for the items in the list by applying the <code>setCellFactory</code> method.</p> 
     <a id="JFXUC251" name="JFXUC251"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref100" name="sthref100"></a> 
      <h2 class="sect1">Creating a List View</h2> 
      <p>The code fragment in <a href="#CEGDGDDG">Example 12-1</a> implements the list with the <code>String</code> items shown in <a href="#CEGDFIJJ">Figure 12-1</a>.</p> 
      <div class="example">
       <a id="CEGDGDDG" name="CEGDGDDG"></a>
       <a id="JFXUC252" name="JFXUC252"></a> 
       <p class="titleinexample">Example 12-1 Creating a List View Control</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
ListView&lt;String&gt; list = new ListView&lt;String&gt;();
ObservableList&lt;String&gt; items =FXCollections.observableArrayList (
    &quot;Single&quot;, &quot;Double&quot;, &quot;Suite&quot;, &quot;Family App&quot;);
list.setItems(items);
</pre>
      </div> 
      <!-- class="example" --> 
      <p>To alter the size and height of the list view control, use the <code>setPrefHeight</code> and <code>setPrefWidth</code> methods. <a href="#CEGIAIDH">Example 12-2</a> constrains the vertical list to 100 pixels wide by 70 pixels high, which results in the list shown in <a href="#CEGCFBFA">Figure 12-2</a>.</p> 
      <div class="example">
       <a id="CEGIAIDH" name="CEGIAIDH"></a>
       <a id="JFXUC253" name="JFXUC253"></a> 
       <p class="titleinexample">Example 12-2 Setting Height and Width for a List View</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
list.setPrefWidth(100);
list.setPrefHeight(70);
</pre>
      </div> 
      <!-- class="example" --> 
      <div class="figure">
       <a id="CEGCFBFA" name="CEGCFBFA"></a>
       <a id="JFXUC254" name="JFXUC254"></a> 
       <p class="titleinfigure">Figure 12-2 Resized Vertical List</p> 
       <img src="img/list-vert.png" alt="Resized list view object." title="Resized list view object." longdesc="img_text/list-vert.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" --> 
      <p>You can orient a <code>ListView</code> object horizontally by setting the orientation property to <code>Orientation.HORIZONTAL</code>. This can be done as follows: <code>list.setOrientation(Orientation.HORIZONTAL)</code>. The horizontal list with the same items as in <a href="#CEGDFIJJ">Figure 12-1</a> is shown in <a href="#CEGEBCCG">Figure 12-3</a>.</p> 
      <div class="figure">
       <a id="CEGEBCCG" name="CEGEBCCG"></a>
       <a id="JFXUC255" name="JFXUC255"></a> 
       <p class="titleinfigure">Figure 12-3 Horizontal List View Control</p> 
       <img src="img/list-horizontal.png" alt="Description of Figure 12-3 follows" title="Description of Figure 12-3 follows" longdesc="img_text/list-horizontal.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" --> 
      <p>You can obtain the current state of each item through the following combinations of methods:</p> 
      <ul> 
       <li> <p><code>getSelectionModel().selectedIndexProperty()</code> – Returns the index of the currently selected item</p> </li> 
       <li> <p><code>getSelectionModel().selectedItemProperty()</code> – Returns the currently selected item</p> </li> 
       <li> <p><code>getFocusModel().getFocusedIndex()</code> – Returns the index of the currently focused item</p> </li> 
       <li> <p><code>getFocusModel().getFocusedItem()</code> – Returns the currently focused item</p> </li> 
      </ul> 
      <p>Note that selected and focused states are read-only and cannot be used to specify which item is selected or focused when the application starts.</p> 
      <p>The previous code samples illustrate how to create a list with text items. However, a list view control can contain <code>Node</code> objects as well.</p> 
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXUC256" name="JFXUC256"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref103" name="sthref103"></a> 
      <h2 class="sect1">Populating a List View with Data</h2> 
      <p>Study the following application to learn how to generate the list items by using the cell factory. The application shown in <a href="#CEGIIDDC">Example 12-3</a> creates a list of color patterns.</p> 
      <div class="example">
       <a id="CEGIIDDC" name="CEGIIDDC"></a>
       <a id="JFXUC257" name="JFXUC257"></a> 
       <p class="titleinexample">Example 12-3 Creating a Cell Factory</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
import javafx.application.Application;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.scene.Scene;
import javafx.scene.control.ListCell;
import javafx.scene.control.ListView;
import javafx.scene.layout.Priority;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.stage.Stage;
import javafx.util.Callback;
 
public class Main extends Application {
 
    ListView&lt;String&gt; list = new ListView&lt;String&gt;();
    ObservableList&lt;String&gt; data = FXCollections.observableArrayList(
            &quot;chocolate&quot;, &quot;salmon&quot;, &quot;gold&quot;, &quot;coral&quot;, &quot;darkorchid&quot;,
            &quot;darkgoldenrod&quot;, &quot;lightsalmon&quot;, &quot;black&quot;, &quot;rosybrown&quot;, &quot;blue&quot;,
            &quot;blueviolet&quot;, &quot;brown&quot;);
 
    @Override
    public void start(Stage stage) {
        VBox box = new VBox();
        Scene scene = new Scene(box, 200, 200);
        stage.setScene(scene);
        stage.setTitle(&quot;ListViewSample&quot;);
        box.getChildren().addAll(list);
        VBox.setVgrow(list, Priority.ALWAYS);
 
        list.setItems(data);
 
        list.setCellFactory(new Callback&lt;ListView&lt;String&gt;, ListCell&lt;String&gt;&gt;() {
            @Override public ListCell&lt;String&gt; call(ListView&lt;String&gt; list) {
                return new ColorRectCell();
            }
        });
 
        stage.show();
    }
    
    static class ColorRectCell extends ListCell&lt;String&gt; {
        @Override
        public void updateItem(String item, boolean empty) {
            super.updateItem(item, empty);
            Rectangle rect = new Rectangle(100, 20);
            if (item != null) {
                rect.setFill(Color.web(item));
                setGraphic(rect);
            }
        }
    }
    
    public static void main(String[] args) {
        launch(args);
    }
}
</pre>
      </div> 
      <!-- class="example" --> 
      <p>The cell factory produces <code>ListCell</code> objects. Every cell is associated with a single data item and renders a single &quot;row&quot; of the list view. The content that the cell represents through the <code>setGraphic</code> method can include other controls, text, shapes, or images. In this application, the list cell shows rectangles.</p> 
      <p>Compiling and running the application produces the window shown in <a href="#CEGEIFCF">Figure 12-4</a>.</p> 
      <div class="figure">
       <a id="CEGEIFCF" name="CEGEIFCF"></a>
       <a id="JFXUC258" name="JFXUC258"></a> 
       <p class="titleinfigure">Figure 12-4 List of Color Patterns</p> 
       <img src="img/list-colors.png" alt="Description of Figure 12-4 follows" title="Description of Figure 12-4 follows" longdesc="img_text/list-colors.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" --> 
      <p>You can scroll through the list, selecting, and deselecting any of its items. You can also extend this application to fill the text label with the color pattern.</p> 
     </div> 
     <!-- class="sect1" --> 
     <a id="JFXUC259" name="JFXUC259"></a> 
     <div class="sect1">
      <!-- infolevel="all" infotype="General" -->
      <a id="sthref105" name="sthref105"></a> 
      <h2 class="sect1">Processing the List Item Selection</h2> 
      <p>Modify the application code as shown in <a href="#CEGDGADC">Example 12-4</a> to enable processing of the event when a particular list item is selected.</p> 
      <div class="example">
       <a id="CEGDGADC" name="CEGDGADC"></a>
       <a id="JFXUC260" name="JFXUC260"></a> 
       <p class="titleinexample">Example 12-4 Processing Events for a List Item</p> 
       <pre xml:space="preserve" class="oac_no_warn prettyprint linenums">
import javafx.application.Application;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.ListCell;
import javafx.scene.control.ListView;
import javafx.scene.layout.Priority;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.scene.text.Font;
import javafx.stage.Stage;
import javafx.util.Callback;
 
public class Main extends Application {
 
    ListView&lt;String&gt; list = new ListView&lt;String&gt;();
    ObservableList&lt;String&gt; data = FXCollections.observableArrayList(
            &quot;chocolate&quot;, &quot;salmon&quot;, &quot;gold&quot;, &quot;coral&quot;, &quot;darkorchid&quot;,
            &quot;darkgoldenrod&quot;, &quot;lightsalmon&quot;, &quot;black&quot;, &quot;rosybrown&quot;, &quot;blue&quot;,
            &quot;blueviolet&quot;, &quot;brown&quot;);
    <span class="bold">final Label label = new Label();</span>
 
    @Override
    public void start(Stage stage) {
        VBox box = new VBox();
        Scene scene = new Scene(box, 200, 200);
        stage.setScene(scene);
        stage.setTitle(&quot;ListViewSample&quot;);
        box.getChildren().addAll(list, label);
        VBox.setVgrow(list, Priority.ALWAYS);
 
        label.setLayoutX(10);
        label.setLayoutY(115);
        label.setFont(Font.font(&quot;Verdana&quot;, 20));
 
        list.setItems(data);
 
        list.setCellFactory(new Callback&lt;ListView&lt;String&gt;, ListCell&lt;String&gt;&gt;() {
            @Override public ListCell&lt;String&gt; call(ListView&lt;String&gt; list) {
                return new ColorRectCell();
            }
        });
 
        <span class="bold">list.getSelectionModel().selectedItemProperty().addListener(</span>
            <span class="bold">new ChangeListener&lt;String&gt;() {</span>
                <span class="bold">public void changed(ObservableValue&lt;? extends String&gt; ov,</span> 
                    <span class="bold">String old_val, String new_val) {</span>
                        <span class="bold">label.setText(new_val);</span>
                        <span class="bold">label.setTextFill(Color.web(new_val));</span>
            <span class="bold">}</span>
        <span class="bold">});</span>
        stage.show();
    }
    
    static class ColorRectCell extends ListCell&lt;String&gt; {
        @Override
        public void updateItem(String item, boolean empty) {
            super.updateItem(item, empty);
            Rectangle rect = new Rectangle(100, 20);
            if (item != null) {
                rect.setFill(Color.web(item));
                setGraphic(rect);
            }
        }
    }
    
    public static void main(String[] args) {
        launch(args);
    }
}
</pre>
      </div> 
      <!-- class="example" --> 
      <p>The <code>addListener</code> method called for the <code>selectedItemProperty</code> creates a new <code>ChangeListener&lt;String&gt;</code> object to handle changes of the selected item. If, for instance, the dark orchid item is selected, the label receives the &quot;darkorchid&quot; caption and is filled with the corresponding color. The output of the modified application is shown in <a href="#CEGJCJDD">Figure 12-5</a>.</p> 
      <div class="figure">
       <a id="CEGJCJDD" name="CEGJCJDD"></a>
       <a id="JFXUC261" name="JFXUC261"></a> 
       <p class="titleinfigure">Figure 12-5 Selecting a Dark Orchid Color Pattern</p> 
       <img src="img/list-color-label.png" alt="The dark orchid color is selected from the list." title="The dark orchid color is selected from the list." longdesc="img_text/list-color-label.htm" />
       <br /> 
       <br /> 
       <br />
      </div> 
      <!-- class="figure" --> 
      <p class="itemizedlisttitle">Related API Documentation &nbsp;</p> 
      <ul> 
       <li> <p><code>ListView</code></p> </li> 
       <li> <p><code>ListCell</code></p> </li> 
      </ul> 
     </div> 
     <!-- class="sect1" --> 
     <!-- /////////////// End content copied from DARB output ////////////// --> 
    </div> 
    <!-- Insert Sections Here! --> 
    <!-- Footer
      ================================================== --> 
    <footer class="footer"> 
     <!-- UY BEGIN --> 
     <div id="uyan_frame"></div> 
     <script type="text/javascript" id="UYScript" src="http://v1.uyan.cc/js/iframe.js?UYUserId=1529249" async=""></script> 
     <!-- UY END --> 
    </footer> 
   </div>
   <div class=" span3" style="padding-top: 110px;">
    <div class=" well">
     <ul class=" nav nav-list">
      <li class=" nav-header">本章目录</li>
      <li><a href="jfxpub-ui_controls.htm">About This Tutorial</a></li>
      <li><a href="overview.htm">JavaFX UI Controls</a></li>
      <li><a href="label.htm">Label</a></li>
      <li><a href="button.htm">Button</a></li>
      <li><a href="radio-button.htm">Radio Button</a></li>
      <li><a href="toggle-button.htm">Toggle Button</a></li>
      <li><a href="checkbox.htm">Checkbox</a></li>
      <li><a href="choice-box.htm">Choice Box</a></li>
      <li><a href="text-field.htm">Text Field</a></li>
      <li><a href="password-field.htm">Password Field</a></li>
      <li><a href="scrollbar.htm">Scroll Bar</a></li>
      <li><a href="scrollpane.htm">Scroll Pane</a></li>
      <li class=" active"><a href="list-view.htm">List View</a></li>
      <li><a href="table-view.htm">Table View</a></li>
      <li><a href="tree-view.htm">Tree View</a></li>
      <li><a href="combo-box.htm">Combo Box</a></li>
      <li><a href="separator.htm">Separator</a></li>
      <li><a href="slider.htm">Slider</a></li>
      <li><a href="progress.htm">Progress Bar and Progress Indicator</a></li>
      <li><a href="hyperlink.htm">Hyperlink</a></li>
      <li><a href="tooltip.htm">Tooltip</a></li>
      <li><a href="editor.htm">HTML Editor</a></li>
      <li><a href="accordion-titledpane.htm">Titled Pane and Accordion</a></li>
      <li><a href="menu_controls.htm">Menu</a></li>
      <li><a href="custom.htm">Customization of UI Controls</a></li>
      <li class=" divider"></li>
      <li class=" nav-header">源码下载</li>
      <li><a href="http://download.oracle.com/javafx/2/ui_controls/UIControlSamples.zip">UIControlSamples.zip</a></li>
      <li class=" divider"></li>
      <li class=" nav-header">版本信息</li>
      <li>平台版本：JavaFX 2.1</li>
      <li>翻译编辑：(未翻译)</li>
      <li>最后更新：2012年7月28日</li>
     </ul>
    </div>
   </div>
   <!-- /container --> 
  </div> 
  <!-- JiaThis Button BEGIN --> 
  <script type="text/javascript">var jiathis_config = {data_track_clickback:true};</script> 
  <script type="text/javascript" src="http://v3.jiathis.com/code/jiathis_r.js?type=left&amp;move=0&amp;btn=l2.gif&amp;uid=1529249" charset="utf-8"></script> 
  <!-- JiaThis Button END --> 
  <!-- Le javascript
    ================================================== --> 
  <!-- Placed at the end of the document so the pages load faster --> 
  <script src="../../assets/js/jquery.min.js"></script> 
  <script src="../../assets/js/easing.js" type="text/javascript"></script> 
  <script src="../../assets/js/jquery.ui.totop.min.js" type="text/javascript"></script> 
  <script src="../../assets/js/google-code-prettify/prettify.js"></script> 
  <script type="text/javascript">
		$(document).ready(function() {
			/*
			var defaults = {
	  			containerID: 'toTop', // fading element id
				containerHoverID: 'toTopHover', // fading element hover id
				scrollSpeed: 1200,
				easingType: 'linear' 
	 		};
			*/
			$().UItoTop({ easingType: 'easeOutQuart' });
		});
	</script> 
  <script src="../../assets/js/bootstrap.min.js"></script> 
  <script src="../../assets/js/application.js"></script>   
 </body>
</html>